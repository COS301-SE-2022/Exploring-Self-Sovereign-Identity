using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;
using Nethereum.Contracts.ContractHandlers;
using ExploringSelfSovereignIdentityAPI.Models;
using ExploringSelfSovereignIdentityAPI.Services.Encryption;

namespace ExploringSelfSovereignIdentityAPI.Services.NetheriumBlockChain
{
    public class UserDataService : IUserDataService
    {
        /*static string url = "http://127.0.0.1:8545";
        static string privateKey = "734674bd34f2476f15c6d5f6c8c1c7c92e465921e546771d088b958607531d10";
        private readonly string senderAddress = "0x8A1f48B91fbDC94b82E1997c2630466c5FaCf38b";
        private static string contractAddress = "0xA52dD18FF4b5C5E84502C09f31068BAB7aD01C00";

        static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey), url);

        private ContractHandler contractHandler = web3.Eth.GetContractHandler(contractAddress);

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
        }*/

        private static string url = "http://testchain.nethereum.com:8545";
        private static string privateKey = "0x7580e7fb49df1c861f0050fae31c2224c6aba908e116b8da44ee8cd927b990b0";
        static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey, 444444444500), url);

        private ContractHandler contractHandler;

        private readonly IEncryptionService encryptservice;

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
            encryptservice = new EncryptionService();
        }

        private async Task<ContractHandler> deploy()
        {
            var userDataContractDeployment = new UserDataContractDeployment();

            var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<UserDataContractDeployment>().SendRequestAndWaitForReceiptAsync(userDataContractDeployment);
            var contractAddress = transactionReceiptDeployment.ContractAddress;

            return web3.Eth.GetContractHandler(contractAddress);
        }



        public async Task<string> createUser(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var createUserFunction = new CreateUserFunction();
            createUserFunction.Id = id;
            var createUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(createUserFunction);
            return "success";
        }

        public async Task<String> newTransactionRequest(TransactionRequest request)
        {
            if (contractHandler == null) contractHandler = await deploy();

            TransactionRequest tr = new TransactionRequest();

            TransactionStamp stamp = new TransactionStamp();
            stamp.ToID = request.Stamp.ToID;
            stamp.FromID = request.Stamp.FromID;
            stamp.Message = request.Stamp.Message;
            stamp.Date = request.Stamp.Date;
            stamp.Status = request.Stamp.Status;

            List<string> attrs = new List<string>();

            for (int i=0; i<request.Attributes.Count; i++) 
            {
                attrs.Add(request.Attributes[i]);
            }

            tr.Attributes = attrs;
            tr.Stamp = stamp;

            var newTransactionRequestFunction = new NewTransactionRequestFunction();
            newTransactionRequestFunction.Request = tr;
            var newTransactionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(newTransactionRequestFunction);

            return "success";
        }

        public async Task<string> approveTransaction(string id, int index)
        {
            if (contractHandler == null) contractHandler = await deploy();

            /* Stage A */
            var approveTransactionStageAFunction = new ApproveTransactionStageAFunction();
            approveTransactionStageAFunction.Id = id;
            approveTransactionStageAFunction.Index = index;
            var approveAFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageAFunction);

            /* Stage B */
            var approveBFunction = new ApproveTransactionStageBFunction();
            approveBFunction.Id = id;
            approveBFunction.Index = index;
            var approveBFunctionTxnReceipDTO = await contractHandler.QueryDeserializingToObjectAsync<ApproveTransactionStageBFunction, ApproveTransactionStageBOutputDTO>(approveBFunction);

            /* Stage C */
            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = approveBFunctionTxnReceipDTO.ReturnValue1.Stamp.FromID;
            approveTransactionStageCFunction.Transaction = approveBFunctionTxnReceipDTO.ReturnValue1;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }


        /*public async Task<string> approveTransactionStageC(string id, TransactionResponse transaction)
        {
            
            TransactionResponse tr = new TransactionResponse();

            tr.Attributes = transaction.Attributes;
            tr.Stamp = transaction.Stamp;

            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = id;
            approveTransactionStageCFunction.Transaction = tr;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }*/




        public async Task<string> updateAttributes(string id, AttributeBC[] attributes)
        {
            return "success";
        }

        public async Task<GetAttributesTransactionOutputDTO> getAttributesForTransaction(String id, List<Attribute> attributes)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getAttributesTransaction = new GetAttributesTransactionFunction();
            getAttributesTransaction.Id = id;
            getAttributesTransaction.Attributes = attributes;
            var getTransactionATtributesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetAttributesTransactionFunction, GetAttributesTransactionOutputDTO>(getAttributesTransaction);

            return getTransactionATtributesOutputDTO;
        }

        public async Task<GetUserDataOutputDTO> updateUserData(UpdateGen2 update)
        {
            if (contractHandler == null) contractHandler = await deploy();

            Update u = new Update();
            u.Id = update.Id;

            List<AttributeUpdate> au = new List<AttributeUpdate>();

            for(int i=0;i < update.Attributes.Count;i++)
            {
                AttributeUpdate item = new AttributeUpdate();
                item.Attribute = new Attribute();
                item.Attribute.Name = update.Attributes[i].Attribute.Name;
                //item.Attribute.Value = update.Attributes[i].Attribute.Value;
                item.Attribute.Value = encryptservice.EncryptString(u.Id, update.Attributes[i].Attribute.Value);

                item.Index = new BigInteger(update.Attributes[i].Index);

                au.Add(item);
                
            }


            List<CredentialUpdate> cu = new List<CredentialUpdate>();
            for (int i = 0; i < update.Credentials.Count; i++)
            {
                
                CredentialUpdate item2 = new CredentialUpdate();

                List<Attribute> ca = new List<Attribute>();
                for (int j = 0; j < update.Credentials[i].Attributes.Count; j++)
                {
                    Attribute item3 = new Attribute();
                    item3.Name = update.Credentials[i].Attributes[j].Name; 
                    item3.Value = encryptservice.EncryptString(u.Id, update.Credentials[i].Attributes[j].Value);

                    ca.Add(item3);
                }
                item2.Attributes = ca;

                item2.Organization = update.Credentials[i].Organization;

                item2.Index = new BigInteger(update.Credentials[i].Index);

                cu.Add(item2);

            }

            u.Attributes = au;
            u.Credentials = cu;

            var updateUserFunction = new UpdateUserFunction();
            updateUserFunction.Update = u;
            var updateUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateUserFunction);
            return await getUserData(update.Id);
        }

        public async Task<GetUserDataOutputDTO> getUserData(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getUserDataFunction = new GetUserDataFunction(); 
            getUserDataFunction.Id = id;
            GetUserDataOutputDTO getUserDataOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetUserDataFunction, GetUserDataOutputDTO>(getUserDataFunction);

            getUserDataOutputDTO.ReturnValue1.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id, attribute.Value));

            getUserDataOutputDTO.ReturnValue1.Credentials.ForEach(credential => credential.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id,attribute.Value)));

            return getUserDataOutputDTO;
        }
    }



    public partial class UserDataContractDeployment : UserDataContractDeploymentBase
    {
        public UserDataContractDeployment() : base(BYTECODE) { }
        public UserDataContractDeployment(string byteCode) : base(byteCode) { }
    }

    public class UserDataContractDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561001057600080fd5b5061578c80620000216000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063755dbe9f11610071578063755dbe9f14610162578063af1a404f1461017e578063b95729751461019a578063d4b94b0e146101ca578063d78ab46f146101e6578063fa1868ff14610216576100a9565b806301760669146100ae57806333d46c87146100ca578063438e644e146100fa578063507ffba51461011657806354ab240314610132575b600080fd5b6100c860048036038101906100c39190614473565b610246565b005b6100e460048036038101906100df91906144bc565b61028b565b6040516100f19190614706565b60405180910390f35b610114600480360381019061010f91906149a9565b610668565b005b610130600480360381019061012b91906149f2565b610674565b005b61014c600480360381019061014791906149f2565b610764565b6040516101599190614f55565b60405180910390f35b61017c60048036038101906101779190614f77565b611e25565b005b6101986004803603810190610193919061505b565b611e61565b005b6101b460048036038101906101af91906144bc565b61217b565b6040516101c19190614706565b60405180910390f35b6101e460048036038101906101df9190615109565b612658565b005b61020060048036038101906101fb9190615109565b6126d7565b60405161020d91906151a9565b60405180910390f35b610230600480360381019061022b91906151cb565b612d9a565b60405161023d91906152c9565b60405180910390f35b60008160200151511115610267576102668160000151826020015161310f565b5b600081604001515111156102885761028781600001518260400151613393565b5b50565b610293613d10565b61029b613d10565b60005b6000856040516102ae9190615327565b90815260200160405180910390206004015481101561065c5761038e6000866040516102da9190615327565b90815260200160405180910390206005016000838152602001908152602001600020600001805461030a9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546103369061536d565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050856136a1565b1561064957838260000181905250600080866040516103ad9190615327565b9081526020016040518091039020600501600083815260200190815260200160002060010154905060008167ffffffffffffffff8111156103f1576103f0613e13565b5b60405190808252806020026020018201604052801561042a57816020015b610417613d2a565b81526020019060019003908161040f5790505b50905060005b82811015610633576000886040516104489190615327565b908152602001604051809103902060050160008581526020019081526020016000206002016000828152602001908152602001600020600001805461048c9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546104b89061536d565b80156105055780601f106104da57610100808354040283529160200191610505565b820191906000526020600020905b8154815290600101906020018083116104e857829003601f168201915b505050505082828151811061051d5761051c61539e565b5b60200260200101516000018190525060008860405161053c9190615327565b90815260200160405180910390206005016000858152602001908152602001600020600201600082815260200190815260200160002060010180546105809061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac9061536d565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b50505050508282815181106106115761061061539e565b5b602002602001015160200181905250808061062b906153fc565b915050610430565b5080846020018190525083945050505050610662565b8080610654906153fc565b91505061029e565b50809150505b92915050565b610671816136cc565b50565b806000826040516106859190615327565b908152602001604051809103902060000190816106a291906155f0565b50600080826040516106b49190615327565b908152602001604051809103902060020181905550600080826040516106da9190615327565b908152602001604051809103902060040181905550600080826040516107009190615327565b908152602001604051809103902060060181905550600080826040516107269190615327565b9081526020016040518091039020600801819055506000808260405161074c9190615327565b9081526020016040518091039020600a018190555050565b61076c613d44565b6000808360405161077d9190615327565b908152602001604051809103902060020154905060008167ffffffffffffffff8111156107ad576107ac613e13565b5b6040519080825280602002602001820160405280156107e657816020015b6107d3613d2a565b8152602001906001900390816107cb5790505b50905060005b6000856040516107fc9190615327565b9081526020016040518091039020600201548110156109e8576000856040516108259190615327565b9081526020016040518091039020600301600082815260200190815260200160002060000180546108559061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546108819061536d565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b50505050508282815181106108e6576108e561539e565b5b6020026020010151600001819052506000856040516109059190615327565b9081526020016040518091039020600301600082815260200190815260200160002060010180546109359061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546109619061536d565b80156109ae5780601f10610983576101008083540402835291602001916109ae565b820191906000526020600020905b81548152906001019060200180831161099157829003601f168201915b50505050508282815181106109c6576109c561539e565b5b60200260200101516020018190525080806109e0906153fc565b9150506107ec565b506000846040516109f99190615327565b908152602001604051809103902060040154915060008267ffffffffffffffff811115610a2957610a28613e13565b5b604051908082528060200260200182016040528015610a6257816020015b610a4f613d10565b815260200190600190039081610a475790505b50905060005b600086604051610a789190615327565b908152602001604051809103902060040154811015610ea757600086604051610aa19190615327565b908152602001604051809103902060050160008281526020019081526020016000206000018054610ad19061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054610afd9061536d565b8015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b5050505050828281518110610b6257610b6161539e565b5b602002602001015160000181905250600086604051610b819190615327565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff811115610bc057610bbf613e13565b5b604051908082528060200260200182016040528015610bf957816020015b610be6613d2a565b815260200190600190039081610bde5790505b50828281518110610c0d57610c0c61539e565b5b60200260200101516020018190525060005b600087604051610c2f9190615327565b9081526020016040518091039020600501600083815260200190815260200160002060010154811015610e9357600087604051610c6c9190615327565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206000018054610cb09061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdc9061536d565b8015610d295780601f10610cfe57610100808354040283529160200191610d29565b820191906000526020600020905b815481529060010190602001808311610d0c57829003601f168201915b5050505050838381518110610d4157610d4061539e565b5b6020026020010151602001518281518110610d5f57610d5e61539e565b5b602002602001015160000181905250600087604051610d7e9190615327565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206001018054610dc29061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dee9061536d565b8015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b5050505050838381518110610e5357610e5261539e565b5b6020026020010151602001518281518110610e7157610e7061539e565b5b6020026020010151602001819052508080610e8b906153fc565b915050610c1f565b508080610e9f906153fc565b915050610a68565b50600085604051610eb89190615327565b908152602001604051809103902060060154925060008086604051610edd9190615327565b90815260200160405180910390206006015467ffffffffffffffff811115610f0857610f07613e13565b5b604051908082528060200260200182016040528015610f4157816020015b610f2e613d7a565b815260200190600190039081610f265790505b50905060005b848110156115b957600087604051610f5f9190615327565b908152602001604051809103902060070160008281526020019081526020016000206002016001018054610f929061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbe9061536d565b801561100b5780601f10610fe05761010080835404028352916020019161100b565b820191906000526020600020905b815481529060010190602001808311610fee57829003601f168201915b50505050508282815181106110235761102261539e565b5b602002602001015160200151602001819052506000876040516110469190615327565b9081526020016040518091039020600701600082815260200190815260200160002060020160000180546110799061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546110a59061536d565b80156110f25780601f106110c7576101008083540402835291602001916110f2565b820191906000526020600020905b8154815290600101906020018083116110d557829003601f168201915b505050505082828151811061110a5761110961539e565b5b6020026020010151602001516000018190525060008760405161112d9190615327565b9081526020016040518091039020600701600082815260200190815260200160002060020160030180546111609061536d565b80601f016020809104026020016040519081016040528092919081815260200182805461118c9061536d565b80156111d95780601f106111ae576101008083540402835291602001916111d9565b820191906000526020600020905b8154815290600101906020018083116111bc57829003601f168201915b50505050508282815181106111f1576111f061539e565b5b602002602001015160200151606001819052506000876040516112149190615327565b9081526020016040518091039020600701600082815260200190815260200160002060020160020180546112479061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546112739061536d565b80156112c05780601f10611295576101008083540402835291602001916112c0565b820191906000526020600020905b8154815290600101906020018083116112a357829003601f168201915b50505050508282815181106112d8576112d761539e565b5b602002602001015160200151604001819052506000876040516112fb9190615327565b90815260200160405180910390206007016000828152602001908152602001600020600201600401805461132e9061536d565b80601f016020809104026020016040519081016040528092919081815260200182805461135a9061536d565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b50505050508282815181106113bf576113be61539e565b5b60200260200101516020015160800181905250600080886040516113e39190615327565b908152602001604051809103902060070160008381526020019081526020016000206000015490508067ffffffffffffffff81111561142557611424613e13565b5b60405190808252806020026020018201604052801561145857816020015b60608152602001906001900390816114435790505b5083838151811061146c5761146b61539e565b5b60200260200101516000018190525060005b818110156115a4576000896040516114969190615327565b90815260200160405180910390206007016000848152602001908152602001600020600101600082815260200190815260200160002080546114d79061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546115039061536d565b80156115505780601f1061152557610100808354040283529160200191611550565b820191906000526020600020905b81548152906001019060200180831161153357829003601f168201915b50505050508484815181106115685761156761539e565b5b60200260200101516000015182815181106115865761158561539e565b5b6020026020010181905250808061159c906153fc565b91505061147e565b505080806115b1906153fc565b915050610f47565b506000866040516115ca9190615327565b908152602001604051809103902060080154935060008467ffffffffffffffff8111156115fa576115f9613e13565b5b60405190808252806020026020018201604052801561163357816020015b611620613d9a565b8152602001906001900390816116185790505b50905060005b85811015611dca576000886040516116519190615327565b9081526020016040518091039020600901600082815260200190815260200160002060020160010180546116849061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546116b09061536d565b80156116fd5780601f106116d2576101008083540402835291602001916116fd565b820191906000526020600020905b8154815290600101906020018083116116e057829003601f168201915b50505050508282815181106117155761171461539e565b5b602002602001015160200151602001819052506000886040516117389190615327565b90815260200160405180910390206009016000828152602001908152602001600020600201600001805461176b9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546117979061536d565b80156117e45780601f106117b9576101008083540402835291602001916117e4565b820191906000526020600020905b8154815290600101906020018083116117c757829003601f168201915b50505050508282815181106117fc576117fb61539e565b5b6020026020010151602001516000018190525060008860405161181f9190615327565b9081526020016040518091039020600901600082815260200190815260200160002060020160030180546118529061536d565b80601f016020809104026020016040519081016040528092919081815260200182805461187e9061536d565b80156118cb5780601f106118a0576101008083540402835291602001916118cb565b820191906000526020600020905b8154815290600101906020018083116118ae57829003601f168201915b50505050508282815181106118e3576118e261539e565b5b602002602001015160200151606001819052506000886040516119069190615327565b9081526020016040518091039020600901600082815260200190815260200160002060020160020180546119399061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546119659061536d565b80156119b25780601f10611987576101008083540402835291602001916119b2565b820191906000526020600020905b81548152906001019060200180831161199557829003601f168201915b50505050508282815181106119ca576119c961539e565b5b602002602001015160200151604001819052506000886040516119ed9190615327565b908152602001604051809103902060090160008281526020019081526020016000206002016004018054611a209061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4c9061536d565b8015611a995780601f10611a6e57610100808354040283529160200191611a99565b820191906000526020600020905b815481529060010190602001808311611a7c57829003601f168201915b5050505050828281518110611ab157611ab061539e565b5b6020026020010151602001516080018190525060008089604051611ad59190615327565b908152602001604051809103902060090160008381526020019081526020016000206000015490508067ffffffffffffffff811115611b1757611b16613e13565b5b604051908082528060200260200182016040528015611b5057816020015b611b3d613d2a565b815260200190600190039081611b355790505b50838381518110611b6457611b6361539e565b5b60200260200101516000018190525060005b81811015611db55760008a604051611b8e9190615327565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206000018054611bd29061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054611bfe9061536d565b8015611c4b5780601f10611c2057610100808354040283529160200191611c4b565b820191906000526020600020905b815481529060010190602001808311611c2e57829003601f168201915b5050505050848481518110611c6357611c6261539e565b5b6020026020010151600001518281518110611c8157611c8061539e565b5b60200260200101516000018190525060008a604051611ca09190615327565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206001018054611ce49061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054611d109061536d565b8015611d5d5780601f10611d3257610100808354040283529160200191611d5d565b820191906000526020600020905b815481529060010190602001808311611d4057829003601f168201915b5050505050848481518110611d7557611d7461539e565b5b6020026020010151600001518281518110611d9357611d9261539e565b5b6020026020010151602001819052508080611dad906153fc565b915050611b76565b50508080611dc2906153fc565b915050611639565b506040518060c00160405280888152602001600089604051611dec9190615327565b90815260200160405180910390206001015481526020018581526020018481526020018381526020018281525095505050505050919050565b80600083604051611e369190615327565b90815260200160405180910390206001016000828254611e5691906156c2565b925050819055505050565b60008083604051611e729190615327565b90815260200160405180910390206008016000815480929190611e94906153fc565b91905055905060008260000151519050826020015160000151600085604051611ebd9190615327565b908152602001604051809103902060090160008481526020019081526020016000206002016000019081611ef191906155f0565b50826020015160200151600085604051611f0b9190615327565b908152602001604051809103902060090160008481526020019081526020016000206002016001019081611f3f91906155f0565b50826020015160400151600085604051611f599190615327565b908152602001604051809103902060090160008481526020019081526020016000206002016002019081611f8d91906155f0565b50826020015160600151600085604051611fa79190615327565b908152602001604051809103902060090160008481526020019081526020016000206002016003019081611fdb91906155f0565b50826020015160800151600085604051611ff59190615327565b90815260200160405180910390206009016000848152602001908152602001600020600201600401908161202991906155f0565b508060008560405161203b9190615327565b908152602001604051809103902060090160008481526020019081526020016000206000018190555060005b8181101561217457836000015181815181106120865761208561539e565b5b6020026020010151600001516000866040516120a29190615327565b90815260200160405180910390206009016000858152602001908152602001600020600101600083815260200190815260200160002060000190816120e791906155f0565b50836000015181815181106120ff576120fe61539e565b5b60200260200101516020015160008660405161211b9190615327565b908152602001604051809103902060090160008581526020019081526020016000206001016000838152602001908152602001600020600101908161216091906155f0565b50808061216c906153fc565b915050612067565b5050505050565b612183613d10565b6000600167ffffffffffffffff8111156121a05761219f613e13565b5b6040519080825280602002602001820160405280156121d957816020015b6121c6613d10565b8152602001906001900390816121be5790505b50905060005b6000856040516121ef9190615327565b908152602001604051809103902060040154811015612632576122cf60008660405161221b9190615327565b90815260200160405180910390206005016000838152602001908152602001600020600001805461224b9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546122779061536d565b80156122c45780601f10612299576101008083540402835291602001916122c4565b820191906000526020600020905b8154815290600101906020018083116122a757829003601f168201915b5050505050856136a1565b1561261f5783826000815181106122e9576122e861539e565b5b6020026020010151600001819052506000856040516123089190615327565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff81111561234757612346613e13565b5b60405190808252806020026020018201604052801561238057816020015b61236d613d2a565b8152602001906001900390816123655790505b50826000815181106123955761239461539e565b5b60200260200101516020018190525060005b6000866040516123b79190615327565b908152602001604051809103902060050160008381526020019081526020016000206001015481101561261d576000866040516123f49190615327565b90815260200160405180910390206005016000838152602001908152602001600020600201600082815260200190815260200160002060000180546124389061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546124649061536d565b80156124b15780601f10612486576101008083540402835291602001916124b1565b820191906000526020600020905b81548152906001019060200180831161249457829003601f168201915b5050505050836000815181106124ca576124c961539e565b5b60200260200101516020015182815181106124e8576124e761539e565b5b6020026020010151600001819052506000866040516125079190615327565b908152602001604051809103902060050160008381526020019081526020016000206002016000828152602001908152602001600020600101805461254b9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546125779061536d565b80156125c45780601f10612599576101008083540402835291602001916125c4565b820191906000526020600020905b8154815290600101906020018083116125a757829003601f168201915b5050505050836000815181106125dd576125dc61539e565b5b60200260200101516020015182815181106125fb576125fa61539e565b5b6020026020010151602001819052508080612615906153fc565b9150506123a7565b505b808061262a906153fc565b9150506121df565b50806000815181106126475761264661539e565b5b602002602001015191505092915050565b6040518060400160405280600881526020017f617070726f76656400000000000000000000000000000000000000000000000081525060008360405161269e9190615327565b9081526020016040518091039020600701600083815260200190815260200160002060020160040190816126d291906155f0565b505050565b6126df613d9a565b6126e7613d9a565b6000846040516126f79190615327565b90815260200160405180910390206007016000848152602001908152602001600020600201600101805461272a9061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546127569061536d565b80156127a35780601f10612778576101008083540402835291602001916127a3565b820191906000526020600020905b81548152906001019060200180831161278657829003601f168201915b50505050508160200151602001819052506000846040516127c49190615327565b9081526020016040518091039020600701600084815260200190815260200160002060020160000180546127f79061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546128239061536d565b80156128705780601f1061284557610100808354040283529160200191612870565b820191906000526020600020905b81548152906001019060200180831161285357829003601f168201915b50505050508160200151600001819052506000846040516128919190615327565b9081526020016040518091039020600701600084815260200190815260200160002060020160030180546128c49061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546128f09061536d565b801561293d5780601f106129125761010080835404028352916020019161293d565b820191906000526020600020905b81548152906001019060200180831161292057829003601f168201915b505050505081602001516060018190525060008460405161295e9190615327565b9081526020016040518091039020600701600084815260200190815260200160002060020160020180546129919061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546129bd9061536d565b8015612a0a5780601f106129df57610100808354040283529160200191612a0a565b820191906000526020600020905b8154815290600101906020018083116129ed57829003601f168201915b5050505050816020015160400181905250600084604051612a2b9190615327565b908152602001604051809103902060070160008481526020019081526020016000206002016004018054612a5e9061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054612a8a9061536d565b8015612ad75780601f10612aac57610100808354040283529160200191612ad7565b820191906000526020600020905b815481529060010190602001808311612aba57829003601f168201915b505050505081602001516080018190525060008085604051612af99190615327565b908152602001604051809103902060070160008581526020019081526020016000206000015490508067ffffffffffffffff811115612b3b57612b3a613e13565b5b604051908082528060200260200182016040528015612b7457816020015b612b61613d2a565b815260200190600190039081612b595790505b50826000018190525060005b81811015612d8e57600086604051612b989190615327565b9081526020016040518091039020600701600086815260200190815260200160002060010160008281526020019081526020016000208054612bd99061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054612c059061536d565b8015612c525780601f10612c2757610100808354040283529160200191612c52565b820191906000526020600020905b815481529060010190602001808311612c3557829003601f168201915b505050505083600001518281518110612c6e57612c6d61539e565b5b602002602001015160000181905250612d5586600088604051612c919190615327565b9081526020016040518091039020600701600088815260200190815260200160002060010160008481526020019081526020016000208054612cd29061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054612cfe9061536d565b8015612d4b5780601f10612d2057610100808354040283529160200191612d4b565b820191906000526020600020905b815481529060010190602001808311612d2e57829003601f168201915b5050505050613924565b83600001518281518110612d6c57612d6b61539e565b5b6020026020010151602001819052508080612d86906153fc565b915050612b80565b50819250505092915050565b60606000825167ffffffffffffffff811115612db957612db8613e13565b5b604051908082528060200260200182016040528015612df257816020015b612ddf613d2a565b815260200190600190039081612dd75790505b50905060005b83518110156131045760005b600086604051612e149190615327565b9081526020016040518091039020600201548110156130f057612f12600087604051612e409190615327565b908152602001604051809103902060030160008381526020019081526020016000206000018054612e709061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054612e9c9061536d565b8015612ee95780601f10612ebe57610100808354040283529160200191612ee9565b820191906000526020600020905b815481529060010190602001808311612ecc57829003601f168201915b5050505050868481518110612f0157612f0061539e565b5b6020026020010151600001516136a1565b156130dc57600086604051612f279190615327565b908152602001604051809103902060030160008281526020019081526020016000206000018054612f579061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054612f839061536d565b8015612fd05780601f10612fa557610100808354040283529160200191612fd0565b820191906000526020600020905b815481529060010190602001808311612fb357829003601f168201915b5050505050838381518110612fe857612fe761539e565b5b6020026020010151600001819052506000866040516130079190615327565b9081526020016040518091039020600301600082815260200190815260200160002060010180546130379061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546130639061536d565b80156130b05780601f10613085576101008083540402835291602001916130b0565b820191906000526020600020905b81548152906001019060200180831161309357829003601f168201915b50505050508383815181106130c8576130c761539e565b5b6020026020010151602001819052506130dd565b5b80806130e8906153fc565b915050612e04565b5080806130fc906153fc565b915050612df8565b508091505092915050565b60005b815181101561338e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82828151811061314f5761314e61539e565b5b602002602001015160200151146132535760008282815181106131755761317461539e565b5b60200260200101516020015190508282815181106131965761319561539e565b5b602002602001015160000151600001516000856040516131b69190615327565b9081526020016040518091039020600301600083815260200190815260200160002060000190816131e791906155f0565b508282815181106131fb576131fa61539e565b5b6020026020010151600001516020015160008560405161321b9190615327565b90815260200160405180910390206003016000838152602001908152602001600020600101908161324c91906155f0565b505061337b565b600080846040516132649190615327565b90815260200160405180910390206002015490506000846040516132889190615327565b908152602001604051809103902060020160008154809291906132aa906153fc565b91905055508282815181106132c2576132c161539e565b5b602002602001015160000151600001516000856040516132e29190615327565b90815260200160405180910390206003016000838152602001908152602001600020600001908161331391906155f0565b508282815181106133275761332661539e565b5b602002602001015160000151602001516000856040516133479190615327565b90815260200160405180910390206003016000838152602001908152602001600020600101908161337891906155f0565b50505b8080613386906153fc565b915050613112565b505050565b60005b815181101561369c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8282815181106133d3576133d261539e565b5b602002602001015160200151146134305761342b838383815181106133fb576133fa61539e565b5b60200260200101516020015184848151811061341a5761341961539e565b5b602002602001015160400151613b37565b613689565b600080846040516134419190615327565b90815260200160405180910390206004016000815480929190613463906153fc565b91905055905082828151811061347c5761347b61539e565b5b6020026020010151600001516000856040516134989190615327565b9081526020016040518091039020600501600083815260200190815260200160002060000190816134c991906155f0565b508282815181106134dd576134dc61539e565b5b602002602001015160400151516000856040516134fa9190615327565b908152602001604051809103902060050160008381526020019081526020016000206001018190555060005b8383815181106135395761353861539e565b5b60200260200101516040015151811015613686578383815181106135605761355f61539e565b5b602002602001015160400151818151811061357e5761357d61539e565b5b60200260200101516000015160008660405161359a9190615327565b90815260200160405180910390206005016000848152602001908152602001600020600201600083815260200190815260200160002060000190816135df91906155f0565b508383815181106135f3576135f261539e565b5b60200260200101516040015181815181106136115761361061539e565b5b60200260200101516020015160008660405161362d9190615327565b908152602001604051809103902060050160008481526020019081526020016000206002016000838152602001908152602001600020600101908161367291906155f0565b50808061367e906153fc565b915050613526565b50505b8080613694906153fc565b915050613396565b505050565b600081805190602001208380519060200120036136c157600190506136c6565b600090505b92915050565b60008160200151602001519050600080826040516136ea9190615327565b9081526020016040518091039020600601600081548092919061370c906153fc565b91905055905082602001516000015160008360405161372b9190615327565b90815260200160405180910390206007016000838152602001908152602001600020600201600001908161375f91906155f0565b508260200151602001516000836040516137799190615327565b9081526020016040518091039020600701600083815260200190815260200160002060020160010190816137ad91906155f0565b508260200151604001516000836040516137c79190615327565b9081526020016040518091039020600701600083815260200190815260200160002060020160020190816137fb91906155f0565b508260200151606001516000836040516138159190615327565b90815260200160405180910390206007016000838152602001908152602001600020600201600301908161384991906155f0565b508260000151516000836040516138609190615327565b908152602001604051809103902060070160008381526020019081526020016000206000018190555060005b83600001515181101561391e57836000015181815181106138b0576138af61539e565b5b60200260200101516000846040516138c89190615327565b908152602001604051809103902060070160008481526020019081526020016000206001016000838152602001908152602001600020908161390a91906155f0565b508080613916906153fc565b91505061388c565b50505050565b606060005b6000846040516139399190615327565b908152602001604051809103902060020154811015613af757613a196000856040516139659190615327565b9081526020016040518091039020600301600083815260200190815260200160002060000180546139959061536d565b80601f01602080910402602001604051908101604052809291908181526020018280546139c19061536d565b8015613a0e5780601f106139e357610100808354040283529160200191613a0e565b820191906000526020600020905b8154815290600101906020018083116139f157829003601f168201915b5050505050846136a1565b15613ae457600084604051613a2e9190615327565b908152602001604051809103902060030160008281526020019081526020016000206001018054613a5e9061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054613a8a9061536d565b8015613ad75780601f10613aac57610100808354040283529160200191613ad7565b820191906000526020600020905b815481529060010190602001808311613aba57829003601f168201915b5050505050915050613b31565b8080613aef906153fc565b915050613929565b506040518060400160405280600381526020017f4e2f41000000000000000000000000000000000000000000000000000000000081525090505b92915050565b60005b8151811015613d0a5760005b600085604051613b569190615327565b908152602001604051809103902060020154811015613cf657613c68600086604051613b829190615327565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206000018054613bc69061536d565b80601f0160208091040260200160405190810160405280929190818152602001828054613bf29061536d565b8015613c3f5780601f10613c1457610100808354040283529160200191613c3f565b820191906000526020600020905b815481529060010190602001808311613c2257829003601f168201915b5050505050848481518110613c5757613c5661539e565b5b6020026020010151600001516136a1565b15613ce357828281518110613c8057613c7f61539e565b5b602002602001015160200151600086604051613c9c9190615327565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206001019081613ce191906155f0565b505b8080613cee906153fc565b915050613b46565b508080613d02906153fc565b915050613b3a565b50505050565b604051806040016040528060608152602001606081525090565b604051806040016040528060608152602001606081525090565b6040518060c001604052806060815260200160008152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060608152602001613d94613dba565b81525090565b604051806040016040528060608152602001613db4613dba565b81525090565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613e4b82613e02565b810181811067ffffffffffffffff82111715613e6a57613e69613e13565b5b80604052505050565b6000613e7d613de9565b9050613e898282613e42565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115613eb857613eb7613e13565b5b613ec182613e02565b9050602081019050919050565b82818337600083830152505050565b6000613ef0613eeb84613e9d565b613e73565b905082815260208101848484011115613f0c57613f0b613e98565b5b613f17848285613ece565b509392505050565b600082601f830112613f3457613f33613e93565b5b8135613f44848260208601613edd565b91505092915050565b600067ffffffffffffffff821115613f6857613f67613e13565b5b602082029050602081019050919050565b600080fd5b600060408284031215613f9457613f93613dfd565b5b613f9e6040613e73565b9050600082013567ffffffffffffffff811115613fbe57613fbd613e8e565b5b613fca84828501613f1f565b600083015250602082013567ffffffffffffffff811115613fee57613fed613e8e565b5b613ffa84828501613f1f565b60208301525092915050565b6000819050919050565b61401981614006565b811461402457600080fd5b50565b60008135905061403681614010565b92915050565b60006040828403121561405257614051613dfd565b5b61405c6040613e73565b9050600082013567ffffffffffffffff81111561407c5761407b613e8e565b5b61408884828501613f7e565b600083015250602061409c84828501614027565b60208301525092915050565b60006140bb6140b684613f4d565b613e73565b905080838252602082019050602084028301858111156140de576140dd613f79565b5b835b8181101561412557803567ffffffffffffffff81111561410357614102613e93565b5b808601614110898261403c565b855260208501945050506020810190506140e0565b5050509392505050565b600082601f83011261414457614143613e93565b5b81356141548482602086016140a8565b91505092915050565b600067ffffffffffffffff82111561417857614177613e13565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156141a4576141a3613e13565b5b602082029050602081019050919050565b60006141c86141c384614189565b613e73565b905080838252602082019050602084028301858111156141eb576141ea613f79565b5b835b8181101561423257803567ffffffffffffffff8111156142105761420f613e93565b5b80860161421d8982613f7e565b855260208501945050506020810190506141ed565b5050509392505050565b600082601f83011261425157614250613e93565b5b81356142618482602086016141b5565b91505092915050565b6000606082840312156142805761427f613dfd565b5b61428a6060613e73565b9050600082013567ffffffffffffffff8111156142aa576142a9613e8e565b5b6142b684828501613f1f565b60008301525060206142ca84828501614027565b602083015250604082013567ffffffffffffffff8111156142ee576142ed613e8e565b5b6142fa8482850161423c565b60408301525092915050565b60006143196143148461415d565b613e73565b9050808382526020820190506020840283018581111561433c5761433b613f79565b5b835b8181101561438357803567ffffffffffffffff81111561436157614360613e93565b5b80860161436e898261426a565b8552602085019450505060208101905061433e565b5050509392505050565b600082601f8301126143a2576143a1613e93565b5b81356143b2848260208601614306565b91505092915050565b6000606082840312156143d1576143d0613dfd565b5b6143db6060613e73565b9050600082013567ffffffffffffffff8111156143fb576143fa613e8e565b5b61440784828501613f1f565b600083015250602082013567ffffffffffffffff81111561442b5761442a613e8e565b5b6144378482850161412f565b602083015250604082013567ffffffffffffffff81111561445b5761445a613e8e565b5b6144678482850161438d565b60408301525092915050565b60006020828403121561448957614488613df3565b5b600082013567ffffffffffffffff8111156144a7576144a6613df8565b5b6144b3848285016143bb565b91505092915050565b600080604083850312156144d3576144d2613df3565b5b600083013567ffffffffffffffff8111156144f1576144f0613df8565b5b6144fd85828601613f1f565b925050602083013567ffffffffffffffff81111561451e5761451d613df8565b5b61452a85828601613f1f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561456e578082015181840152602081019050614553565b8381111561457d576000848401525b50505050565b600061458e82614534565b614598818561453f565b93506145a8818560208601614550565b6145b181613e02565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526146058282614583565b9150506020830151848203602086015261461f8282614583565b9150508091505092915050565b600061463883836145e8565b905092915050565b6000602082019050919050565b6000614658826145bc565b61466281856145c7565b935083602082028501614674856145d8565b8060005b858110156146b05784840389528151614691858261462c565b945061469c83614640565b925060208a01995050600181019050614678565b50829750879550505050505092915050565b600060408301600083015184820360008601526146df8282614583565b915050602083015184820360208601526146f9828261464d565b9150508091505092915050565b6000602082019050818103600083015261472081846146c2565b905092915050565b600067ffffffffffffffff82111561474357614742613e13565b5b602082029050602081019050919050565b600061476761476284614728565b613e73565b9050808382526020820190506020840283018581111561478a57614789613f79565b5b835b818110156147d157803567ffffffffffffffff8111156147af576147ae613e93565b5b8086016147bc8982613f1f565b8552602085019450505060208101905061478c565b5050509392505050565b600082601f8301126147f0576147ef613e93565b5b8135614800848260208601614754565b91505092915050565b600060a0828403121561481f5761481e613dfd565b5b61482960a0613e73565b9050600082013567ffffffffffffffff81111561484957614848613e8e565b5b61485584828501613f1f565b600083015250602082013567ffffffffffffffff81111561487957614878613e8e565b5b61488584828501613f1f565b602083015250604082013567ffffffffffffffff8111156148a9576148a8613e8e565b5b6148b584828501613f1f565b604083015250606082013567ffffffffffffffff8111156148d9576148d8613e8e565b5b6148e584828501613f1f565b606083015250608082013567ffffffffffffffff81111561490957614908613e8e565b5b61491584828501613f1f565b60808301525092915050565b60006040828403121561493757614936613dfd565b5b6149416040613e73565b9050600082013567ffffffffffffffff81111561496157614960613e8e565b5b61496d848285016147db565b600083015250602082013567ffffffffffffffff81111561499157614990613e8e565b5b61499d84828501614809565b60208301525092915050565b6000602082840312156149bf576149be613df3565b5b600082013567ffffffffffffffff8111156149dd576149dc613df8565b5b6149e984828501614921565b91505092915050565b600060208284031215614a0857614a07613df3565b5b600082013567ffffffffffffffff811115614a2657614a25613df8565b5b614a3284828501613f1f565b91505092915050565b614a4481614006565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152614a938282614583565b91505060208301518482036020860152614aad828261464d565b9150508091505092915050565b6000614ac68383614a76565b905092915050565b6000602082019050919050565b6000614ae682614a4a565b614af08185614a55565b935083602082028501614b0285614a66565b8060005b85811015614b3e5784840389528151614b1f8582614aba565b9450614b2a83614ace565b925060208a01995050600181019050614b06565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614bb48383614583565b905092915050565b6000602082019050919050565b6000614bd482614b7c565b614bde8185614b87565b935083602082028501614bf085614b98565b8060005b85811015614c2c5784840389528151614c0d8582614ba8565b9450614c1883614bbc565b925060208a01995050600181019050614bf4565b50829750879550505050505092915050565b600060a0830160008301518482036000860152614c5b8282614583565b91505060208301518482036020860152614c758282614583565b91505060408301518482036040860152614c8f8282614583565b91505060608301518482036060860152614ca98282614583565b91505060808301518482036080860152614cc38282614583565b9150508091505092915050565b60006040830160008301518482036000860152614ced8282614bc9565b91505060208301518482036020860152614d078282614c3e565b9150508091505092915050565b6000614d208383614cd0565b905092915050565b6000602082019050919050565b6000614d4082614b50565b614d4a8185614b5b565b935083602082028501614d5c85614b6c565b8060005b85811015614d985784840389528151614d798582614d14565b9450614d8483614d28565b925060208a01995050600181019050614d60565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152614df3828261464d565b91505060208301518482036020860152614e0d8282614c3e565b9150508091505092915050565b6000614e268383614dd6565b905092915050565b6000602082019050919050565b6000614e4682614daa565b614e508185614db5565b935083602082028501614e6285614dc6565b8060005b85811015614e9e5784840389528151614e7f8582614e1a565b9450614e8a83614e2e565b925060208a01995050600181019050614e66565b50829750879550505050505092915050565b600060c0830160008301518482036000860152614ecd8282614583565b9150506020830151614ee26020860182614a3b565b5060408301518482036040860152614efa828261464d565b91505060608301518482036060860152614f148282614adb565b91505060808301518482036080860152614f2e8282614d35565b91505060a083015184820360a0860152614f488282614e3b565b9150508091505092915050565b60006020820190508181036000830152614f6f8184614eb0565b905092915050565b60008060408385031215614f8e57614f8d613df3565b5b600083013567ffffffffffffffff811115614fac57614fab613df8565b5b614fb885828601613f1f565b9250506020614fc985828601614027565b9150509250929050565b600060408284031215614fe957614fe8613dfd565b5b614ff36040613e73565b9050600082013567ffffffffffffffff81111561501357615012613e8e565b5b61501f8482850161423c565b600083015250602082013567ffffffffffffffff81111561504357615042613e8e565b5b61504f84828501614809565b60208301525092915050565b6000806040838503121561507257615071613df3565b5b600083013567ffffffffffffffff8111156150905761508f613df8565b5b61509c85828601613f1f565b925050602083013567ffffffffffffffff8111156150bd576150bc613df8565b5b6150c985828601614fd3565b9150509250929050565b6000819050919050565b6150e6816150d3565b81146150f157600080fd5b50565b600081359050615103816150dd565b92915050565b600080604083850312156151205761511f613df3565b5b600083013567ffffffffffffffff81111561513e5761513d613df8565b5b61514a85828601613f1f565b925050602061515b858286016150f4565b9150509250929050565b60006040830160008301518482036000860152615182828261464d565b9150506020830151848203602086015261519c8282614c3e565b9150508091505092915050565b600060208201905081810360008301526151c38184615165565b905092915050565b600080604083850312156151e2576151e1613df3565b5b600083013567ffffffffffffffff811115615200576151ff613df8565b5b61520c85828601613f1f565b925050602083013567ffffffffffffffff81111561522d5761522c613df8565b5b6152398582860161423c565b9150509250929050565b600082825260208201905092915050565b600061525f826145bc565b6152698185615243565b93508360208202850161527b856145d8565b8060005b858110156152b75784840389528151615298858261462c565b94506152a383614640565b925060208a0199505060018101905061527f565b50829750879550505050505092915050565b600060208201905081810360008301526152e38184615254565b905092915050565b600081905092915050565b600061530182614534565b61530b81856152eb565b935061531b818560208601614550565b80840191505092915050565b600061533382846152f6565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061538557607f821691505b6020821081036153985761539761533e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000615407826150d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615439576154386153cd565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026154a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615469565b6154b08683615469565b95508019841693508086168417925050509392505050565b6000819050919050565b60006154ed6154e86154e3846150d3565b6154c8565b6150d3565b9050919050565b6000819050919050565b615507836154d2565b61551b615513826154f4565b848454615476565b825550505050565b600090565b615530615523565b61553b8184846154fe565b505050565b5b8181101561555f57615554600082615528565b600181019050615541565b5050565b601f8211156155a45761557581615444565b61557e84615459565b8101602085101561558d578190505b6155a161559985615459565b830182615540565b50505b505050565b600082821c905092915050565b60006155c7600019846008026155a9565b1980831691505092915050565b60006155e083836155b6565b9150826002028217905092915050565b6155f982614534565b67ffffffffffffffff81111561561257615611613e13565b5b61561c825461536d565b615627828285615563565b600060209050601f83116001811461565a5760008415615648578287015190505b61565285826155d4565b8655506156ba565b601f19841661566886615444565b60005b828110156156905784890151825560018201915060208501945060208101905061566b565b868310156156ad57848901516156a9601f8916826155b6565b8355505b6001600288020188555050505b505050505050565b60006156cd82614006565b91506156d883614006565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615615713576157126153cd565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561574b5761574a6153cd565b5b82820190509291505056fea2646970667358221220f6a5a0a6d20638793aedf922b0183ff2b81fbd3eaca61600351e0477878593d764736f6c634300080f0033";
        public UserDataContractDeploymentBase() : base(BYTECODE) { }
        public UserDataContractDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class ApproveTransactionStageAFunction : ApproveTransactionStageAFunctionBase { }

    [Function("approveTransactionStageA")]
    public class ApproveTransactionStageAFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageBFunction : ApproveTransactionStageBFunctionBase { }

    [Function("approveTransactionStageB", typeof(ApproveTransactionStageBOutputDTO))]
    public class ApproveTransactionStageBFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageCFunction : ApproveTransactionStageCFunctionBase { }

    [Function("approveTransactionStageC")]
    public class ApproveTransactionStageCFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple", "transaction", 2)]
        public virtual TransactionResponse Transaction { get; set; }
    }

    public partial class CreateUserFunction : CreateUserFunctionBase { }

    [Function("createUser")]
    public class CreateUserFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class GetAttributesTransactionFunction : GetAttributesTransactionFunctionBase { }

    [Function("getAttributesTransaction", typeof(GetAttributesTransactionOutputDTO))]
    public class GetAttributesTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class GetCredentialFunction : GetCredentialFunctionBase { }

    [Function("getCredential", typeof(GetCredentialOutputDTO))]
    public class GetCredentialFunctionBase : FunctionMessage
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetCredentialTransactionFunction : GetCredentialTransactionFunctionBase { }

    [Function("getCredentialTransaction", typeof(GetCredentialTransactionOutputDTO))]
    public class GetCredentialTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetUserDataFunction : GetUserDataFunctionBase { }

    [Function("getUserData", typeof(GetUserDataOutputDTO))]
    public class GetUserDataFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class NewTransactionRequestFunction : NewTransactionRequestFunctionBase { }

    [Function("newTransactionRequest")]
    public class NewTransactionRequestFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "request", 1)]
        public virtual TransactionRequest Request { get; set; }
    }

    public partial class UpdateBalanceFunction : UpdateBalanceFunctionBase { }

    [Function("updateBalance")]
    public class UpdateBalanceFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class UpdateUserFunction : UpdateUserFunctionBase { }

    [Function("updateUser")]
    public class UpdateUserFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "update", 1)]
        public virtual Update Update { get; set; }
    }



    public partial class ApproveTransactionStageBOutputDTO : ApproveTransactionStageBOutputDTOBase { }

    [FunctionOutput]
    public class ApproveTransactionStageBOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual TransactionResponse ReturnValue1 { get; set; }
    }





    public partial class GetAttributesTransactionOutputDTO : GetAttributesTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetAttributesTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Attribute> ReturnValue1 { get; set; }
    }

    public partial class GetCredentialOutputDTO : GetCredentialOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetCredentialTransactionOutputDTO : GetCredentialTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetUserDataOutputDTO : GetUserDataOutputDTOBase { }

    [FunctionOutput]
    public class GetUserDataOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual UserDataResponse ReturnValue1 { get; set; }
    }







    public partial class Attribute : AttributeBase { }

    public class AttributeBase
    {
        [Parameter("string", "name", 1)]
        public virtual string Name { get; set; }
        [Parameter("string", "value", 2)]
        public virtual string Value { get; set; }
    }

    public partial class TransactionStamp : TransactionStampBase { }

    public class TransactionStampBase
    {
        [Parameter("string", "fromID", 1)]
        public virtual string FromID { get; set; }
        [Parameter("string", "toID", 2)]
        public virtual string ToID { get; set; }
        [Parameter("string", "date", 3)]
        public virtual string Date { get; set; }
        [Parameter("string", "message", 4)]
        public virtual string Message { get; set; }
        [Parameter("string", "status", 5)]
        public virtual string Status { get; set; }
    }

    public partial class TransactionResponse : TransactionResponseBase { }

    public class TransactionResponseBase
    {
        [Parameter("tuple[]", "attributes", 1)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class CredentialResponse : CredentialResponseBase { }

    public class CredentialResponseBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class TransactionRequest : TransactionRequestBase { }

    public class TransactionRequestBase
    {
        [Parameter("string[]", "attributes", 1)]
        public virtual List<string> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class UserDataResponse : UserDataResponseBase { }

    public class UserDataResponseBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "balance", 2)]
        public virtual BigInteger Balance { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 4)]
        public virtual List<CredentialResponse> Credentials { get; set; }
        [Parameter("tuple[]", "transactionRequests", 5)]
        public virtual List<TransactionRequest> TransactionRequests { get; set; }
        [Parameter("tuple[]", "approvedTransactions", 6)]
        public virtual List<TransactionResponse> ApprovedTransactions { get; set; }
    }

    public partial class AttributeUpdate : AttributeUpdateBase { }

    public class AttributeUpdateBase
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class CredentialUpdate : CredentialUpdateBase { }

    public class CredentialUpdateBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class Update : UpdateBase { }

    public class UpdateBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdate> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdate> Credentials { get; set; }
    }


    public partial class AttributeUpdateGen2 : AttributeUpdateBaseGen2 { }

    public class AttributeUpdateBaseGen2
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
    }



    public partial class CredentialUpdateGen2 : CredentialUpdateBaseGen2 { }

    public class CredentialUpdateBaseGen2
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }



    public partial class UpdateGen2 : UpdateBaseGen2 { }

    public class UpdateBaseGen2
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdateGen2> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdateGen2> Credentials { get; set; }
    }



}
