using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;
using Nethereum.Contracts.ContractHandlers;
using ExploringSelfSovereignIdentityAPI.Models;

namespace ExploringSelfSovereignIdentityAPI.Services.NetheriumBlockChain
{
    public class UserDataService : IUserDataService
    {
        static string url = "http://127.0.0.1:8545";

        static string privateKey = "734674bd34f2476f15c6d5f6c8c1c7c92e465921e546771d088b958607531d10";

        //private Web3 Web3Instance = new Web3("http://127.0.0.1:8545");

        private readonly string senderAddress = "0x8A1f48B91fbDC94b82E1997c2630466c5FaCf38b";
        private static string contractAddress = "0x6e7aAB627FD8676B1233d177a6D4bF07a5Cb9141";

        static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey), url);

        private ContractHandler contractHandler = web3.Eth.GetContractHandler(contractAddress);

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
        }

        

        public async Task<string> createUser(string id)
        {
            var createUserFunction = new CreateUserFunction();
            createUserFunction.Id = id;
            var createUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(createUserFunction);
            return "success";
        }

        public async Task<String> newTransactionRequest(TransactionRequest request)
        {
            TransactionRequest tr = new TransactionRequest();

            TransactionStamp stamp = new TransactionStamp();
            stamp.ToID = request.Stamp.ToID;
            stamp.FromID = request.Stamp.FromID;
            stamp.Message = request.Stamp.Message;
            stamp.Date = request.Stamp.Date;
            stamp.Status = request.Stamp.Status;

            List<string> attrs = new List<string>();

            for (int i=0; i<request.Attributes.Count; i++) 
            {
                attrs.Add(request.Attributes[i]);
            }

            tr.Attributes = attrs;
            tr.Stamp = stamp;

            var newTransactionRequestFunction = new NewTransactionRequestFunction();
            newTransactionRequestFunction.Request = tr;
            var newTransactionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(newTransactionRequestFunction);

            return "success";
        }

        public async Task<string> updateAttributes(string id, AttributeBC[] attributes)
        {
            return "success";
        }

        public async Task<GetAttributesTransactionOutputDTO> getAttributesForTransaction(String id, List<Attribute> attributes)
        {
            var getAttributesTransaction = new GetAttributesTransactionFunction();
            getAttributesTransaction.Id = id;
            getAttributesTransaction.Attributes = attributes;
            var getTransactionATtributesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetAttributesTransactionFunction, GetAttributesTransactionOutputDTO>(getAttributesTransaction);

            return getTransactionATtributesOutputDTO;
        }

        public async Task<GetUserDataOutputDTO> updateUserData(UpdateGen2 update)
        {
            Update u = new Update();
            u.Id = update.Id;

            List<AttributeUpdate> au = new List<AttributeUpdate>();

            for(int i=0;i < update.Attributes.Count;i++)
            {
                AttributeUpdate item = new AttributeUpdate();
                item.Attribute = new Attribute();
                item.Attribute.Name = update.Attributes[i].Attribute.Name;
                item.Attribute.Value = update.Attributes[i].Attribute.Value;

                item.Index = new BigInteger(update.Attributes[i].Index);

                au.Add(item);
                
            }


            List<CredentialUpdate> cu = new List<CredentialUpdate>();
            for (int i = 0; i < update.Credentials.Count; i++)
            {
                
                CredentialUpdate item2 = new CredentialUpdate();

                List<Attribute> ca = new List<Attribute>();
                for (int j = 0; j < update.Credentials[i].Attributes.Count; j++)
                {
                    Attribute item3 = new Attribute();
                    item3.Name = update.Credentials[i].Attributes[j].Name; 
                    item3.Value = update.Credentials[i].Attributes[j].Value;

                    ca.Add(item3);
                }
                item2.Attributes = ca;

                item2.Organization = update.Credentials[i].Organization;

                item2.Index = new BigInteger(update.Credentials[i].Index);

                cu.Add(item2);

            }

            u.Attributes = au;
            u.Credentials = cu;

            var updateUserFunction = new UpdateUserFunction();
            updateUserFunction.Update = u;
            var updateUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateUserFunction);
            return await getUserData(update.Id);
        }

        public async Task<GetUserDataOutputDTO> getUserData(string id)
        {
            var getUserDataFunction = new GetUserDataFunction(); 
            getUserDataFunction.Id = id;
            var getUserDataOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetUserDataFunction, GetUserDataOutputDTO>(getUserDataFunction);

            return getUserDataOutputDTO;
        }
    }

    public partial class UserDataContractDeployment : UserDataContractDeploymentBase
    {
        public UserDataContractDeployment() : base(BYTECODE) { }
        public UserDataContractDeployment(string byteCode) : base(byteCode) { }
    }

    public class UserDataContractDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561001057600080fd5b5061396e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630176066914610067578063507ffba514610083578063519668661461009f57806354ab2403146100bb578063b9572975146100eb578063fa1868ff1461011b575b600080fd5b610081600480360381019061007c9190612abf565b61014b565b005b61009d60048036038101906100989190612b08565b610190565b005b6100b960048036038101906100b49190612da2565b61025a565b005b6100d560048036038101906100d09190612b08565b610266565b6040516100e29190613337565b60405180910390f35b61010560048036038101906101009190613359565b61100f565b6040516101129190613415565b60405180910390f35b61013560048036038101906101309190613437565b6114ec565b6040516101429190613535565b60405180910390f35b6000816020015151111561016c5761016b81600001518260200151611861565b5b6000816040015151111561018d5761018c81600001518260400151611ae5565b5b50565b806000826040516101a19190613593565b908152602001604051809103902060000190816101be91906137c0565b50600080826040516101d09190613593565b908152602001604051809103902060010181905550600080826040516101f69190613593565b9081526020016040518091039020600301819055506000808260405161021c9190613593565b908152602001604051809103902060050181905550600080826040516102429190613593565b90815260200160405180910390206007018190555050565b61026381611df3565b50565b61026e6122b7565b6000808360405161027f9190613593565b908152602001604051809103902060010154905060008167ffffffffffffffff8111156102af576102ae61245f565b5b6040519080825280602002602001820160405280156102e857816020015b6102d56122df565b8152602001906001900390816102cd5790505b50905060005b6000856040516102fe9190613593565b9081526020016040518091039020600101548110156104ea576000856040516103279190613593565b908152602001604051809103902060020160008281526020019081526020016000206000018054610357906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610383906135d9565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b50505050508282815181106103e8576103e7613892565b5b6020026020010151600001819052506000856040516104079190613593565b908152602001604051809103902060020160008281526020019081526020016000206001018054610437906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610463906135d9565b80156104b05780601f10610485576101008083540402835291602001916104b0565b820191906000526020600020905b81548152906001019060200180831161049357829003601f168201915b50505050508282815181106104c8576104c7613892565b5b60200260200101516020018190525080806104e2906138f0565b9150506102ee565b506000846040516104fb9190613593565b908152602001604051809103902060030154915060008267ffffffffffffffff81111561052b5761052a61245f565b5b60405190808252806020026020018201604052801561056457816020015b6105516122f9565b8152602001906001900390816105495790505b50905060005b60008660405161057a9190613593565b9081526020016040518091039020600301548110156109a9576000866040516105a39190613593565b9081526020016040518091039020600401600082815260200190815260200160002060000180546105d3906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff906135d9565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b505050505082828151811061066457610663613892565b5b6020026020010151600001819052506000866040516106839190613593565b908152602001604051809103902060040160008281526020019081526020016000206001015467ffffffffffffffff8111156106c2576106c161245f565b5b6040519080825280602002602001820160405280156106fb57816020015b6106e86122df565b8152602001906001900390816106e05790505b5082828151811061070f5761070e613892565b5b60200260200101516020018190525060005b6000876040516107319190613593565b90815260200160405180910390206004016000838152602001908152602001600020600101548110156109955760008760405161076e9190613593565b90815260200160405180910390206004016000838152602001908152602001600020600201600082815260200190815260200160002060000180546107b2906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546107de906135d9565b801561082b5780601f106108005761010080835404028352916020019161082b565b820191906000526020600020905b81548152906001019060200180831161080e57829003601f168201915b505050505083838151811061084357610842613892565b5b602002602001015160200151828151811061086157610860613892565b5b6020026020010151600001819052506000876040516108809190613593565b90815260200160405180910390206004016000838152602001908152602001600020600201600082815260200190815260200160002060010180546108c4906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546108f0906135d9565b801561093d5780601f106109125761010080835404028352916020019161093d565b820191906000526020600020905b81548152906001019060200180831161092057829003601f168201915b505050505083838151811061095557610954613892565b5b602002602001015160200151828151811061097357610972613892565b5b602002602001015160200181905250808061098d906138f0565b915050610721565b5080806109a1906138f0565b91505061056a565b506000856040516109ba9190613593565b9081526020016040518091039020600501549250600080866040516109df9190613593565b90815260200160405180910390206005015467ffffffffffffffff811115610a0a57610a0961245f565b5b604051908082528060200260200182016040528015610a4357816020015b610a30612313565b815260200190600190039081610a285790505b50905060005b84811015610fe257600087604051610a619190613593565b908152602001604051809103902060060160008281526020019081526020016000206001016001018054610a94906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac0906135d9565b8015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b5050505050828281518110610b2557610b24613892565b5b60200260200101516020015160200181905250600087604051610b489190613593565b908152602001604051809103902060060160008281526020019081526020016000206001016000018054610b7b906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba7906135d9565b8015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b5050505050828281518110610c0c57610c0b613892565b5b60200260200101516020015160000181905250600087604051610c2f9190613593565b908152602001604051809103902060060160008281526020019081526020016000206001016003018054610c62906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8e906135d9565b8015610cdb5780601f10610cb057610100808354040283529160200191610cdb565b820191906000526020600020905b815481529060010190602001808311610cbe57829003601f168201915b5050505050828281518110610cf357610cf2613892565b5b60200260200101516020015160600181905250600087604051610d169190613593565b908152602001604051809103902060060160008281526020019081526020016000206001016002018054610d49906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610d75906135d9565b8015610dc25780601f10610d9757610100808354040283529160200191610dc2565b820191906000526020600020905b815481529060010190602001808311610da557829003601f168201915b5050505050828281518110610dda57610dd9613892565b5b6020026020010151602001516040018190525060008088604051610dfe9190613593565b908152602001604051809103902060060160008381526020019081526020016000206000018054905090508067ffffffffffffffff811115610e4357610e4261245f565b5b604051908082528060200260200182016040528015610e7657816020015b6060815260200190600190039081610e615790505b50838381518110610e8a57610e89613892565b5b60200260200101516000018190525060005b81811015610fcd57600089604051610eb49190613593565b908152602001604051809103902060060160008481526020019081526020016000206000018181548110610eeb57610eea613892565b5b906000526020600020018054610f00906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2c906135d9565b8015610f795780601f10610f4e57610100808354040283529160200191610f79565b820191906000526020600020905b815481529060010190602001808311610f5c57829003601f168201915b5050505050848481518110610f9157610f90613892565b5b6020026020010151600001518281518110610faf57610fae613892565b5b60200260200101819052508080610fc5906138f0565b915050610e9c565b50508080610fda906138f0565b915050610a49565b50604051806080016040528087815260200184815260200183815260200182815250945050505050919050565b6110176122f9565b6000600167ffffffffffffffff8111156110345761103361245f565b5b60405190808252806020026020018201604052801561106d57816020015b61105a6122f9565b8152602001906001900390816110525790505b50905060005b6000856040516110839190613593565b9081526020016040518091039020600301548110156114c6576111636000866040516110af9190613593565b9081526020016040518091039020600401600083815260200190815260200160002060000180546110df906135d9565b80601f016020809104026020016040519081016040528092919081815260200182805461110b906135d9565b80156111585780601f1061112d57610100808354040283529160200191611158565b820191906000526020600020905b81548152906001019060200180831161113b57829003601f168201915b5050505050856120b3565b156114b357838260008151811061117d5761117c613892565b5b60200260200101516000018190525060008560405161119c9190613593565b908152602001604051809103902060040160008281526020019081526020016000206001015467ffffffffffffffff8111156111db576111da61245f565b5b60405190808252806020026020018201604052801561121457816020015b6112016122df565b8152602001906001900390816111f95790505b508260008151811061122957611228613892565b5b60200260200101516020018190525060005b60008660405161124b9190613593565b90815260200160405180910390206004016000838152602001908152602001600020600101548110156114b1576000866040516112889190613593565b90815260200160405180910390206004016000838152602001908152602001600020600201600082815260200190815260200160002060000180546112cc906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546112f8906135d9565b80156113455780601f1061131a57610100808354040283529160200191611345565b820191906000526020600020905b81548152906001019060200180831161132857829003601f168201915b50505050508360008151811061135e5761135d613892565b5b602002602001015160200151828151811061137c5761137b613892565b5b60200260200101516000018190525060008660405161139b9190613593565b90815260200160405180910390206004016000838152602001908152602001600020600201600082815260200190815260200160002060010180546113df906135d9565b80601f016020809104026020016040519081016040528092919081815260200182805461140b906135d9565b80156114585780601f1061142d57610100808354040283529160200191611458565b820191906000526020600020905b81548152906001019060200180831161143b57829003601f168201915b50505050508360008151811061147157611470613892565b5b602002602001015160200151828151811061148f5761148e613892565b5b60200260200101516020018190525080806114a9906138f0565b91505061123b565b505b80806114be906138f0565b915050611073565b50806000815181106114db576114da613892565b5b602002602001015191505092915050565b60606000825167ffffffffffffffff81111561150b5761150a61245f565b5b60405190808252806020026020018201604052801561154457816020015b6115316122df565b8152602001906001900390816115295790505b50905060005b83518110156118565760005b6000866040516115669190613593565b908152602001604051809103902060010154811015611842576116646000876040516115929190613593565b9081526020016040518091039020600201600083815260200190815260200160002060000180546115c2906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546115ee906135d9565b801561163b5780601f106116105761010080835404028352916020019161163b565b820191906000526020600020905b81548152906001019060200180831161161e57829003601f168201915b505050505086848151811061165357611652613892565b5b6020026020010151600001516120b3565b1561182e576000866040516116799190613593565b9081526020016040518091039020600201600082815260200190815260200160002060000180546116a9906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546116d5906135d9565b80156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b505050505083838151811061173a57611739613892565b5b6020026020010151600001819052506000866040516117599190613593565b908152602001604051809103902060020160008281526020019081526020016000206001018054611789906135d9565b80601f01602080910402602001604051908101604052809291908181526020018280546117b5906135d9565b80156118025780601f106117d757610100808354040283529160200191611802565b820191906000526020600020905b8154815290600101906020018083116117e557829003601f168201915b505050505083838151811061181a57611819613892565b5b60200260200101516020018190525061182f565b5b808061183a906138f0565b915050611556565b50808061184e906138f0565b91505061154a565b508091505092915050565b60005b8151811015611ae0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8282815181106118a1576118a0613892565b5b602002602001015160200151146119a55760008282815181106118c7576118c6613892565b5b60200260200101516020015190508282815181106118e8576118e7613892565b5b602002602001015160000151600001516000856040516119089190613593565b90815260200160405180910390206002016000838152602001908152602001600020600001908161193991906137c0565b5082828151811061194d5761194c613892565b5b6020026020010151600001516020015160008560405161196d9190613593565b90815260200160405180910390206002016000838152602001908152602001600020600101908161199e91906137c0565b5050611acd565b600080846040516119b69190613593565b90815260200160405180910390206001015490506000846040516119da9190613593565b908152602001604051809103902060010160008154809291906119fc906138f0565b9190505550828281518110611a1457611a13613892565b5b60200260200101516000015160000151600085604051611a349190613593565b908152602001604051809103902060020160008381526020019081526020016000206000019081611a6591906137c0565b50828281518110611a7957611a78613892565b5b60200260200101516000015160200151600085604051611a999190613593565b908152602001604051809103902060020160008381526020019081526020016000206001019081611aca91906137c0565b50505b8080611ad8906138f0565b915050611864565b505050565b60005b8151811015611dee577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828281518110611b2557611b24613892565b5b60200260200101516020015114611b8257611b7d83838381518110611b4d57611b4c613892565b5b602002602001015160200151848481518110611b6c57611b6b613892565b5b6020026020010151604001516120de565b611ddb565b60008084604051611b939190613593565b90815260200160405180910390206003016000815480929190611bb5906138f0565b919050559050828281518110611bce57611bcd613892565b5b602002602001015160000151600085604051611bea9190613593565b908152602001604051809103902060040160008381526020019081526020016000206000019081611c1b91906137c0565b50828281518110611c2f57611c2e613892565b5b60200260200101516040015151600085604051611c4c9190613593565b908152602001604051809103902060040160008381526020019081526020016000206001018190555060005b838381518110611c8b57611c8a613892565b5b60200260200101516040015151811015611dd857838381518110611cb257611cb1613892565b5b6020026020010151604001518181518110611cd057611ccf613892565b5b602002602001015160000151600086604051611cec9190613593565b9081526020016040518091039020600401600084815260200190815260200160002060020160008381526020019081526020016000206000019081611d3191906137c0565b50838381518110611d4557611d44613892565b5b6020026020010151604001518181518110611d6357611d62613892565b5b602002602001015160200151600086604051611d7f9190613593565b9081526020016040518091039020600401600084815260200190815260200160002060020160008381526020019081526020016000206001019081611dc491906137c0565b508080611dd0906138f0565b915050611c78565b50505b8080611de6906138f0565b915050611ae8565b505050565b6000816020015160200151905060008082604051611e119190613593565b90815260200160405180910390206005016000815480929190611e33906138f0565b919050559050826020015160000151600083604051611e529190613593565b908152602001604051809103902060060160008381526020019081526020016000206001016000019081611e8691906137c0565b50826020015160200151600083604051611ea09190613593565b908152602001604051809103902060060160008381526020019081526020016000206001016001019081611ed491906137c0565b50826020015160400151600083604051611eee9190613593565b908152602001604051809103902060060160008381526020019081526020016000206001016002019081611f2291906137c0565b50826020015160600151600083604051611f3c9190613593565b908152602001604051809103902060060160008381526020019081526020016000206001016003019081611f7091906137c0565b5082600001515167ffffffffffffffff811115611f9057611f8f61245f565b5b604051908082528060200260200182016040528015611fc357816020015b6060815260200190600190039081611fae5790505b50600083604051611fd49190613593565b90815260200160405180910390206006016000838152602001908152602001600020600001908051906020019061200c929190612333565b5060005b8360000151518110156120ad578360000151818151811061203457612033613892565b5b602002602001015160008460405161204c9190613593565b90815260200160405180910390206006016000848152602001908152602001600020600001828154811061208357612082613892565b5b90600052602060002001908161209991906137c0565b5080806120a5906138f0565b915050612010565b50505050565b600081805190602001208380519060200120036120d357600190506120d8565b600090505b92915050565b60005b81518110156122b15760005b6000856040516120fd9190613593565b90815260200160405180910390206001015481101561229d5761220f6000866040516121299190613593565b908152602001604051809103902060040160008681526020019081526020016000206002016000838152602001908152602001600020600001805461216d906135d9565b80601f0160208091040260200160405190810160405280929190818152602001828054612199906135d9565b80156121e65780601f106121bb576101008083540402835291602001916121e6565b820191906000526020600020905b8154815290600101906020018083116121c957829003601f168201915b50505050508484815181106121fe576121fd613892565b5b6020026020010151600001516120b3565b1561228a5782828151811061222757612226613892565b5b6020026020010151602001516000866040516122439190613593565b908152602001604051809103902060040160008681526020019081526020016000206002016000838152602001908152602001600020600101908161228891906137c0565b505b8080612295906138f0565b9150506120ed565b5080806122a9906138f0565b9150506120e1565b50505050565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b604051806040016040528060608152602001606081525090565b604051806040016040528060608152602001606081525090565b60405180604001604052806060815260200161232d61238c565b81525090565b82805482825590600052602060002090810192821561237b579160200282015b8281111561237a57825182908161236a91906137c0565b5091602001919060010190612353565b5b50905061238891906123b4565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b5b808211156123d457600081816123cb91906123d8565b506001016123b5565b5090565b5080546123e4906135d9565b6000825580601f106123f65750612415565b601f0160209004906000526020600020908101906124149190612418565b5b50565b5b80821115612431576000816000905550600101612419565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6124978261244e565b810181811067ffffffffffffffff821117156124b6576124b561245f565b5b80604052505050565b60006124c9612435565b90506124d5828261248e565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156125045761250361245f565b5b61250d8261244e565b9050602081019050919050565b82818337600083830152505050565b600061253c612537846124e9565b6124bf565b905082815260208101848484011115612558576125576124e4565b5b61256384828561251a565b509392505050565b600082601f8301126125805761257f6124df565b5b8135612590848260208601612529565b91505092915050565b600067ffffffffffffffff8211156125b4576125b361245f565b5b602082029050602081019050919050565b600080fd5b6000604082840312156125e0576125df612449565b5b6125ea60406124bf565b9050600082013567ffffffffffffffff81111561260a576126096124da565b5b6126168482850161256b565b600083015250602082013567ffffffffffffffff81111561263a576126396124da565b5b6126468482850161256b565b60208301525092915050565b6000819050919050565b61266581612652565b811461267057600080fd5b50565b6000813590506126828161265c565b92915050565b60006040828403121561269e5761269d612449565b5b6126a860406124bf565b9050600082013567ffffffffffffffff8111156126c8576126c76124da565b5b6126d4848285016125ca565b60008301525060206126e884828501612673565b60208301525092915050565b600061270761270284612599565b6124bf565b9050808382526020820190506020840283018581111561272a576127296125c5565b5b835b8181101561277157803567ffffffffffffffff81111561274f5761274e6124df565b5b80860161275c8982612688565b8552602085019450505060208101905061272c565b5050509392505050565b600082601f8301126127905761278f6124df565b5b81356127a08482602086016126f4565b91505092915050565b600067ffffffffffffffff8211156127c4576127c361245f565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156127f0576127ef61245f565b5b602082029050602081019050919050565b600061281461280f846127d5565b6124bf565b90508083825260208201905060208402830185811115612837576128366125c5565b5b835b8181101561287e57803567ffffffffffffffff81111561285c5761285b6124df565b5b80860161286989826125ca565b85526020850194505050602081019050612839565b5050509392505050565b600082601f83011261289d5761289c6124df565b5b81356128ad848260208601612801565b91505092915050565b6000606082840312156128cc576128cb612449565b5b6128d660606124bf565b9050600082013567ffffffffffffffff8111156128f6576128f56124da565b5b6129028482850161256b565b600083015250602061291684828501612673565b602083015250604082013567ffffffffffffffff81111561293a576129396124da565b5b61294684828501612888565b60408301525092915050565b6000612965612960846127a9565b6124bf565b90508083825260208201905060208402830185811115612988576129876125c5565b5b835b818110156129cf57803567ffffffffffffffff8111156129ad576129ac6124df565b5b8086016129ba89826128b6565b8552602085019450505060208101905061298a565b5050509392505050565b600082601f8301126129ee576129ed6124df565b5b81356129fe848260208601612952565b91505092915050565b600060608284031215612a1d57612a1c612449565b5b612a2760606124bf565b9050600082013567ffffffffffffffff811115612a4757612a466124da565b5b612a538482850161256b565b600083015250602082013567ffffffffffffffff811115612a7757612a766124da565b5b612a838482850161277b565b602083015250604082013567ffffffffffffffff811115612aa757612aa66124da565b5b612ab3848285016129d9565b60408301525092915050565b600060208284031215612ad557612ad461243f565b5b600082013567ffffffffffffffff811115612af357612af2612444565b5b612aff84828501612a07565b91505092915050565b600060208284031215612b1e57612b1d61243f565b5b600082013567ffffffffffffffff811115612b3c57612b3b612444565b5b612b488482850161256b565b91505092915050565b600067ffffffffffffffff821115612b6c57612b6b61245f565b5b602082029050602081019050919050565b6000612b90612b8b84612b51565b6124bf565b90508083825260208201905060208402830185811115612bb357612bb26125c5565b5b835b81811015612bfa57803567ffffffffffffffff811115612bd857612bd76124df565b5b808601612be5898261256b565b85526020850194505050602081019050612bb5565b5050509392505050565b600082601f830112612c1957612c186124df565b5b8135612c29848260208601612b7d565b91505092915050565b600060808284031215612c4857612c47612449565b5b612c5260806124bf565b9050600082013567ffffffffffffffff811115612c7257612c716124da565b5b612c7e8482850161256b565b600083015250602082013567ffffffffffffffff811115612ca257612ca16124da565b5b612cae8482850161256b565b602083015250604082013567ffffffffffffffff811115612cd257612cd16124da565b5b612cde8482850161256b565b604083015250606082013567ffffffffffffffff811115612d0257612d016124da565b5b612d0e8482850161256b565b60608301525092915050565b600060408284031215612d3057612d2f612449565b5b612d3a60406124bf565b9050600082013567ffffffffffffffff811115612d5a57612d596124da565b5b612d6684828501612c04565b600083015250602082013567ffffffffffffffff811115612d8a57612d896124da565b5b612d9684828501612c32565b60208301525092915050565b600060208284031215612db857612db761243f565b5b600082013567ffffffffffffffff811115612dd657612dd5612444565b5b612de284828501612d1a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e25578082015181840152602081019050612e0a565b83811115612e34576000848401525b50505050565b6000612e4582612deb565b612e4f8185612df6565b9350612e5f818560208601612e07565b612e688161244e565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152612ebc8282612e3a565b91505060208301518482036020860152612ed68282612e3a565b9150508091505092915050565b6000612eef8383612e9f565b905092915050565b6000602082019050919050565b6000612f0f82612e73565b612f198185612e7e565b935083602082028501612f2b85612e8f565b8060005b85811015612f675784840389528151612f488582612ee3565b9450612f5383612ef7565b925060208a01995050600181019050612f2f565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152612fc28282612e3a565b91505060208301518482036020860152612fdc8282612f04565b9150508091505092915050565b6000612ff58383612fa5565b905092915050565b6000602082019050919050565b600061301582612f79565b61301f8185612f84565b93508360208202850161303185612f95565b8060005b8581101561306d578484038952815161304e8582612fe9565b945061305983612ffd565b925060208a01995050600181019050613035565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006130e38383612e3a565b905092915050565b6000602082019050919050565b6000613103826130ab565b61310d81856130b6565b93508360208202850161311f856130c7565b8060005b8581101561315b578484038952815161313c85826130d7565b9450613147836130eb565b925060208a01995050600181019050613123565b50829750879550505050505092915050565b6000608083016000830151848203600086015261318a8282612e3a565b915050602083015184820360208601526131a48282612e3a565b915050604083015184820360408601526131be8282612e3a565b915050606083015184820360608601526131d88282612e3a565b9150508091505092915050565b6000604083016000830151848203600086015261320282826130f8565b9150506020830151848203602086015261321c828261316d565b9150508091505092915050565b600061323583836131e5565b905092915050565b6000602082019050919050565b60006132558261307f565b61325f818561308a565b9350836020820285016132718561309b565b8060005b858110156132ad578484038952815161328e8582613229565b94506132998361323d565b925060208a01995050600181019050613275565b50829750879550505050505092915050565b600060808301600083015184820360008601526132dc8282612e3a565b915050602083015184820360208601526132f68282612f04565b91505060408301518482036040860152613310828261300a565b9150506060830151848203606086015261332a828261324a565b9150508091505092915050565b6000602082019050818103600083015261335181846132bf565b905092915050565b600080604083850312156133705761336f61243f565b5b600083013567ffffffffffffffff81111561338e5761338d612444565b5b61339a8582860161256b565b925050602083013567ffffffffffffffff8111156133bb576133ba612444565b5b6133c78582860161256b565b9150509250929050565b600060408301600083015184820360008601526133ee8282612e3a565b915050602083015184820360208601526134088282612f04565b9150508091505092915050565b6000602082019050818103600083015261342f81846133d1565b905092915050565b6000806040838503121561344e5761344d61243f565b5b600083013567ffffffffffffffff81111561346c5761346b612444565b5b6134788582860161256b565b925050602083013567ffffffffffffffff81111561349957613498612444565b5b6134a585828601612888565b9150509250929050565b600082825260208201905092915050565b60006134cb82612e73565b6134d581856134af565b9350836020820285016134e785612e8f565b8060005b8581101561352357848403895281516135048582612ee3565b945061350f83612ef7565b925060208a019950506001810190506134eb565b50829750879550505050505092915050565b6000602082019050818103600083015261354f81846134c0565b905092915050565b600081905092915050565b600061356d82612deb565b6135778185613557565b9350613587818560208601612e07565b80840191505092915050565b600061359f8284613562565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806135f157607f821691505b602082108103613604576136036135aa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261366c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261362f565b613676868361362f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006136bd6136b86136b38461368e565b613698565b61368e565b9050919050565b6000819050919050565b6136d7836136a2565b6136eb6136e3826136c4565b84845461363c565b825550505050565b600090565b6137006136f3565b61370b8184846136ce565b505050565b5b8181101561372f576137246000826136f8565b600181019050613711565b5050565b601f821115613774576137458161360a565b61374e8461361f565b8101602085101561375d578190505b6137716137698561361f565b830182613710565b50505b505050565b600082821c905092915050565b600061379760001984600802613779565b1980831691505092915050565b60006137b08383613786565b9150826002028217905092915050565b6137c982612deb565b67ffffffffffffffff8111156137e2576137e161245f565b5b6137ec82546135d9565b6137f7828285613733565b600060209050601f83116001811461382a5760008415613818578287015190505b61382285826137a4565b86555061388a565b601f1984166138388661360a565b60005b828110156138605784890151825560018201915060208501945060208101905061383b565b8683101561387d5784890151613879601f891682613786565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138fb8261368e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361392d5761392c6138c1565b5b60018201905091905056fea26469706673582212209c3fb4f870cb8da7dcd31fa35a0cf1753c83e365d4327ca2a4a9320eaa7e864d64736f6c634300080f0033";
        public UserDataContractDeploymentBase() : base(BYTECODE) { }
        public UserDataContractDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class CreateUserFunction : CreateUserFunctionBase { }

    [Function("createUser")]
    public class CreateUserFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class UpdateUserFunction : UpdateUserFunctionBase { }

    [Function("updateUser")]
    public class UpdateUserFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "update", 1)]
        public virtual Update Update { get; set; }
    }

    public partial class GetUserDataFunction : GetUserDataFunctionBase { }

    [Function("getUserData", typeof(GetUserDataOutputDTO))]
    public class GetUserDataFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class NewTransactionRequestFunction : NewTransactionRequestFunctionBase { }

    [Function("newTransactionRequest")]
    public class NewTransactionRequestFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "request", 1)]
        public virtual TransactionRequest Request { get; set; }
    }

    public partial class GetAttributesTransactionFunction : GetAttributesTransactionFunctionBase { }

    [Function("getAttributesTransaction", typeof(GetAttributesTransactionOutputDTO))]
    public class GetAttributesTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class GetCredentialTransactionFunction : GetCredentialTransactionFunctionBase { }

    [Function("getCredentialTransaction", typeof(GetCredentialTransactionOutputDTO))]
    public class GetCredentialTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }





    public partial class GetUserDataOutputDTO : GetUserDataOutputDTOBase { }

    [FunctionOutput]
    public class GetUserDataOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual UserDataResponse ReturnValue1 { get; set; }
    }



    public partial class GetAttributesTransactionOutputDTO : GetAttributesTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetAttributesTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Attribute> ReturnValue1 { get; set; }
    }

    public partial class GetCredentialTransactionOutputDTO : GetCredentialTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class Attribute : AttributeBase { }

    public class AttributeBase
    {
        [Parameter("string", "name", 1)]
        public virtual string Name { get; set; }
        [Parameter("string", "value", 2)]
        public virtual string Value { get; set; }
    }

    public partial class AttributeUpdate : AttributeUpdateBase { }

    public class AttributeUpdateBase
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }


    public partial class AttributeUpdateGen2 : AttributeUpdateBaseGen2 { }

    public class AttributeUpdateBaseGen2
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
    }


    public partial class CredentialUpdate : CredentialUpdateBase { }

    public class CredentialUpdateBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class CredentialUpdateGen2 : CredentialUpdateBaseGen2 { }

    public class CredentialUpdateBaseGen2
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class Update : UpdateBase { }

    public class UpdateBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdate> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdate> Credentials { get; set; }
    }


    public partial class UpdateGen2 : UpdateBaseGen2 { }

    public class UpdateBaseGen2
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdateGen2> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdateGen2> Credentials { get; set; }
    }



    public partial class CredentialResponse : CredentialResponseBase { }

    public class CredentialResponseBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class TransactionStamp : TransactionStampBase { }

    public class TransactionStampBase
    {
        [Parameter("string", "fromID", 1)]
        public virtual string FromID { get; set; }
        [Parameter("string", "toID", 2)]
        public virtual string ToID { get; set; }
        [Parameter("string", "date", 3)]
        public virtual string Date { get; set; }
        [Parameter("string", "message", 4)]
        public virtual string Message { get; set; }
        [Parameter("string", "status", 4)]
        public virtual string Status { get; set; }
    }

    public partial class TransactionRequest : TransactionRequestBase { }

    public class TransactionRequestBase
    {
        [Parameter("string[]", "attributes", 1)]
        public virtual List<string> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class UserDataResponse : UserDataResponseBase { }

    public class UserDataResponseBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialResponse> Credentials { get; set; }
        [Parameter("tuple[]", "transactionRequests", 4)]
        public virtual List<TransactionRequest> TransactionRequests { get; set; }
    }
}
