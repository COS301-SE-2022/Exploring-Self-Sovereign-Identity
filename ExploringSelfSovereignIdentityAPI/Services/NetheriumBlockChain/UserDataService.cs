using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;
using Nethereum.Contracts.ContractHandlers;
using ExploringSelfSovereignIdentityAPI.Models;
using ExploringSelfSovereignIdentityAPI.Services.Encryption;

namespace ExploringSelfSovereignIdentityAPI.Services.NetheriumBlockChain
{
    public class UserDataService : IUserDataService
    {
        /*static string url = "http://127.0.0.1:8545";
        static string privateKey = "734674bd34f2476f15c6d5f6c8c1c7c92e465921e546771d088b958607531d10";
        private readonly string senderAddress = "0x8A1f48B91fbDC94b82E1997c2630466c5FaCf38b";
        private static string contractAddress = "0xA52dD18FF4b5C5E84502C09f31068BAB7aD01C00";

        static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey), url);

        private ContractHandler contractHandler = web3.Eth.GetContractHandler(contractAddress);

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
        }*/

        private static string url = "http://testchain.nethereum.com:8545";
        private static string privateKey = "0x7580e7fb49df1c861f0050fae31c2224c6aba908e116b8da44ee8cd927b990b0";
        private static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey, 444444444500), url);

        private static ContractHandler contractHandler;

        private readonly IEncryptionService encryptservice;

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
            encryptservice = new EncryptionService();
        }

        private async Task<ContractHandler> deploy()
        {
            var userDataContractDeployment = new UserDataContractDeployment();

            var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<UserDataContractDeployment>().SendRequestAndWaitForReceiptAsync(userDataContractDeployment);
            var contractAddress = transactionReceiptDeployment.ContractAddress;

            return web3.Eth.GetContractHandler(contractAddress);
        }



        public async Task<string> createUser(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var createUserFunction = new CreateUserFunction();
            createUserFunction.Id = id;
            var createUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(createUserFunction);
            return "success";
        }

        public async Task<String> newTransactionRequest(TransactionRequest request)
        {
            if (contractHandler == null) contractHandler = await deploy();

            TransactionRequest tr = new TransactionRequest();

            TransactionStamp stamp = new TransactionStamp();
            stamp.ToID = request.Stamp.ToID;
            stamp.FromID = request.Stamp.FromID;
            stamp.Message = request.Stamp.Message;
            stamp.Date = request.Stamp.Date;
            stamp.Status = "pending";

            List<string> attrs = new List<string>();

            for (int i=0; i<request.Attributes.Count; i++) 
            {
                attrs.Add(request.Attributes[i]);
            }

            tr.Attributes = attrs;
            tr.Stamp = stamp;

            var newTransactionRequestFunction = new NewTransactionRequestFunction();
            newTransactionRequestFunction.Request = tr;
            var newTransactionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(newTransactionRequestFunction);

            return "success";
        }

        public async Task<string> approveTransaction(string id, int index)
        {
            if (contractHandler == null) contractHandler = await deploy();

            /* Stage A */
            var approveTransactionStageAFunction = new ApproveTransactionStageAFunction();
            approveTransactionStageAFunction.Id = id;
            approveTransactionStageAFunction.Index = index;
            var approveAFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageAFunction);

            /* Stage B */
            var approveBFunction = new ApproveTransactionStageBFunction();
            approveBFunction.Id = id;
            approveBFunction.Index = index;
            var approveBFunctionTxnReceipDTO = await contractHandler.QueryDeserializingToObjectAsync<ApproveTransactionStageBFunction, ApproveTransactionStageBOutputDTO>(approveBFunction);

            /* Stage C */
            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = approveBFunctionTxnReceipDTO.ReturnValue1.Stamp.FromID;
            approveTransactionStageCFunction.Transaction = approveBFunctionTxnReceipDTO.ReturnValue1;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }


        /*public async Task<string> approveTransactionStageC(string id, TransactionResponse transaction)
        {
            
            TransactionResponse tr = new TransactionResponse();

            tr.Attributes = transaction.Attributes;
            tr.Stamp = transaction.Stamp;

            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = id;
            approveTransactionStageCFunction.Transaction = tr;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }*/




        public async Task<string> updateAttributes(string id, AttributeBC[] attributes)
        {
            return "success";
        }

        public async Task<GetAttributesTransactionOutputDTO> getAttributesForTransaction(String id, List<Attribute> attributes)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getAttributesTransaction = new GetAttributesTransactionFunction();
            getAttributesTransaction.Id = id;
            getAttributesTransaction.Attributes = attributes;
            var getTransactionATtributesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetAttributesTransactionFunction, GetAttributesTransactionOutputDTO>(getAttributesTransaction);

            return getTransactionATtributesOutputDTO;
        }

        public async Task<GetUserDataOutputDTO> updateUserData(UpdateGen2 update)
        {
            if (contractHandler == null) contractHandler = await deploy();

            Update u = new Update();
            u.Id = update.Id;

            List<AttributeUpdate> au = new List<AttributeUpdate>();

            for(int i=0;i < update.Attributes.Count;i++)
            {
                AttributeUpdate item = new AttributeUpdate();
                item.Attribute = new Attribute();
                item.Attribute.Name = update.Attributes[i].Attribute.Name;
                //item.Attribute.Value = update.Attributes[i].Attribute.Value;
                item.Attribute.Value = encryptservice.EncryptString(u.Id, update.Attributes[i].Attribute.Value);

                item.Index = new BigInteger(update.Attributes[i].Index);

                au.Add(item);
                
            }


            List<CredentialUpdate> cu = new List<CredentialUpdate>();
            for (int i = 0; i < update.Credentials.Count; i++)
            {
                
                CredentialUpdate item2 = new CredentialUpdate();

                List<Attribute> ca = new List<Attribute>();
                for (int j = 0; j < update.Credentials[i].Attributes.Count; j++)
                {
                    Attribute item3 = new Attribute();
                    item3.Name = update.Credentials[i].Attributes[j].Name; 
                    item3.Value = encryptservice.EncryptString(u.Id, update.Credentials[i].Attributes[j].Value);

                    ca.Add(item3);
                }
                item2.Attributes = ca;

                item2.Organization = update.Credentials[i].Organization;

                item2.Index = new BigInteger(update.Credentials[i].Index);

                cu.Add(item2);

            }

            u.Attributes = au;
            u.Credentials = cu;

            var updateUserFunction = new UpdateUserFunction();
            updateUserFunction.Update = u;
            var updateUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateUserFunction);
            return await getUserData(update.Id);
        }

        public async Task<GetUserDataOutputDTO> getUserData(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getUserDataFunction = new GetUserDataFunction(); 
            getUserDataFunction.Id = id;
            GetUserDataOutputDTO getUserDataOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetUserDataFunction, GetUserDataOutputDTO>(getUserDataFunction);

            getUserDataOutputDTO.ReturnValue1.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id, attribute.Value));

            getUserDataOutputDTO.ReturnValue1.Credentials.ForEach(credential => credential.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id,attribute.Value)));

            if (getUserDataOutputDTO.ReturnValue1.Id == "")
                getUserDataOutputDTO.ReturnValue1.Id = "undefined";

            return getUserDataOutputDTO;
        }
    }



    public partial class UserDataContractDeployment : UserDataContractDeploymentBase
    {
        public UserDataContractDeployment() : base(BYTECODE) { }
        public UserDataContractDeployment(string byteCode) : base(byteCode) { }
    }

    public class UserDataContractDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561001057600080fd5b5061583580620000216000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063755dbe9f11610071578063755dbe9f14610162578063af1a404f1461017e578063b95729751461019a578063d4b94b0e146101ca578063d78ab46f146101e6578063fa1868ff14610216576100a9565b806301760669146100ae57806333d46c87146100ca578063438e644e146100fa578063507ffba51461011657806354ab240314610132575b600080fd5b6100c860048036038101906100c3919061451c565b610246565b005b6100e460048036038101906100df9190614565565b61028b565b6040516100f191906147af565b60405180910390f35b610114600480360381019061010f9190614a52565b610668565b005b610130600480360381019061012b9190614a9b565b610674565b005b61014c60048036038101906101479190614a9b565b610764565b6040516101599190614ffe565b60405180910390f35b61017c60048036038101906101779190615020565b611ece565b005b61019860048036038101906101939190615104565b611f0a565b005b6101b460048036038101906101af9190614565565b612224565b6040516101c191906147af565b60405180910390f35b6101e460048036038101906101df91906151b2565b612701565b005b61020060048036038101906101fb91906151b2565b612780565b60405161020d9190615252565b60405180910390f35b610230600480360381019061022b9190615274565b612e43565b60405161023d9190615372565b60405180910390f35b6000816020015151111561026757610266816000015182602001516131b8565b5b60008160400151511115610288576102878160000151826040015161343c565b5b50565b610293613db9565b61029b613db9565b60005b6000856040516102ae91906153d0565b90815260200160405180910390206004015481101561065c5761038e6000866040516102da91906153d0565b90815260200160405180910390206005016000838152602001908152602001600020600001805461030a90615416565b80601f016020809104026020016040519081016040528092919081815260200182805461033690615416565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b50505050508561374a565b1561064957838260000181905250600080866040516103ad91906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060010154905060008167ffffffffffffffff8111156103f1576103f0613ebc565b5b60405190808252806020026020018201604052801561042a57816020015b610417613dd3565b81526020019060019003908161040f5790505b50905060005b828110156106335760008860405161044891906153d0565b908152602001604051809103902060050160008581526020019081526020016000206002016000828152602001908152602001600020600001805461048c90615416565b80601f01602080910402602001604051908101604052809291908181526020018280546104b890615416565b80156105055780601f106104da57610100808354040283529160200191610505565b820191906000526020600020905b8154815290600101906020018083116104e857829003601f168201915b505050505082828151811061051d5761051c615447565b5b60200260200101516000018190525060008860405161053c91906153d0565b908152602001604051809103902060050160008581526020019081526020016000206002016000828152602001908152602001600020600101805461058090615416565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90615416565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b505050505082828151811061061157610610615447565b5b602002602001015160200181905250808061062b906154a5565b915050610430565b5080846020018190525083945050505050610662565b8080610654906154a5565b91505061029e565b50809150505b92915050565b61067181613775565b50565b8060008260405161068591906153d0565b908152602001604051809103902060000190816106a29190615699565b50600080826040516106b491906153d0565b908152602001604051809103902060020181905550600080826040516106da91906153d0565b9081526020016040518091039020600401819055506000808260405161070091906153d0565b9081526020016040518091039020600601819055506000808260405161072691906153d0565b9081526020016040518091039020600801819055506000808260405161074c91906153d0565b9081526020016040518091039020600a018190555050565b61076c613ded565b6000808360405161077d91906153d0565b908152602001604051809103902060020154905060008167ffffffffffffffff8111156107ad576107ac613ebc565b5b6040519080825280602002602001820160405280156107e657816020015b6107d3613dd3565b8152602001906001900390816107cb5790505b50905060005b6000856040516107fc91906153d0565b9081526020016040518091039020600201548110156109e85760008560405161082591906153d0565b90815260200160405180910390206003016000828152602001908152602001600020600001805461085590615416565b80601f016020809104026020016040519081016040528092919081815260200182805461088190615416565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b50505050508282815181106108e6576108e5615447565b5b60200260200101516000018190525060008560405161090591906153d0565b90815260200160405180910390206003016000828152602001908152602001600020600101805461093590615416565b80601f016020809104026020016040519081016040528092919081815260200182805461096190615416565b80156109ae5780601f10610983576101008083540402835291602001916109ae565b820191906000526020600020905b81548152906001019060200180831161099157829003601f168201915b50505050508282815181106109c6576109c5615447565b5b60200260200101516020018190525080806109e0906154a5565b9150506107ec565b506000846040516109f991906153d0565b908152602001604051809103902060040154915060008267ffffffffffffffff811115610a2957610a28613ebc565b5b604051908082528060200260200182016040528015610a6257816020015b610a4f613db9565b815260200190600190039081610a475790505b50905060005b600086604051610a7891906153d0565b908152602001604051809103902060040154811015610ea757600086604051610aa191906153d0565b908152602001604051809103902060050160008281526020019081526020016000206000018054610ad190615416565b80601f0160208091040260200160405190810160405280929190818152602001828054610afd90615416565b8015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b5050505050828281518110610b6257610b61615447565b5b602002602001015160000181905250600086604051610b8191906153d0565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff811115610bc057610bbf613ebc565b5b604051908082528060200260200182016040528015610bf957816020015b610be6613dd3565b815260200190600190039081610bde5790505b50828281518110610c0d57610c0c615447565b5b60200260200101516020018190525060005b600087604051610c2f91906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060010154811015610e9357600087604051610c6c91906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206000018054610cb090615416565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdc90615416565b8015610d295780601f10610cfe57610100808354040283529160200191610d29565b820191906000526020600020905b815481529060010190602001808311610d0c57829003601f168201915b5050505050838381518110610d4157610d40615447565b5b6020026020010151602001518281518110610d5f57610d5e615447565b5b602002602001015160000181905250600087604051610d7e91906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206001018054610dc290615416565b80601f0160208091040260200160405190810160405280929190818152602001828054610dee90615416565b8015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b5050505050838381518110610e5357610e52615447565b5b6020026020010151602001518281518110610e7157610e70615447565b5b6020026020010151602001819052508080610e8b906154a5565b915050610c1f565b508080610e9f906154a5565b915050610a68565b50600085604051610eb891906153d0565b908152602001604051809103902060060154925060008086604051610edd91906153d0565b90815260200160405180910390206006015467ffffffffffffffff811115610f0857610f07613ebc565b5b604051908082528060200260200182016040528015610f4157816020015b610f2e613e23565b815260200190600190039081610f265790505b50905060005b848110156115b957600087604051610f5f91906153d0565b908152602001604051809103902060070160008281526020019081526020016000206002016001018054610f9290615416565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbe90615416565b801561100b5780601f10610fe05761010080835404028352916020019161100b565b820191906000526020600020905b815481529060010190602001808311610fee57829003601f168201915b505050505082828151811061102357611022615447565b5b6020026020010151602001516020018190525060008760405161104691906153d0565b90815260200160405180910390206007016000828152602001908152602001600020600201600001805461107990615416565b80601f01602080910402602001604051908101604052809291908181526020018280546110a590615416565b80156110f25780601f106110c7576101008083540402835291602001916110f2565b820191906000526020600020905b8154815290600101906020018083116110d557829003601f168201915b505050505082828151811061110a57611109615447565b5b6020026020010151602001516000018190525060008760405161112d91906153d0565b90815260200160405180910390206007016000828152602001908152602001600020600201600301805461116090615416565b80601f016020809104026020016040519081016040528092919081815260200182805461118c90615416565b80156111d95780601f106111ae576101008083540402835291602001916111d9565b820191906000526020600020905b8154815290600101906020018083116111bc57829003601f168201915b50505050508282815181106111f1576111f0615447565b5b6020026020010151602001516060018190525060008760405161121491906153d0565b90815260200160405180910390206007016000828152602001908152602001600020600201600201805461124790615416565b80601f016020809104026020016040519081016040528092919081815260200182805461127390615416565b80156112c05780601f10611295576101008083540402835291602001916112c0565b820191906000526020600020905b8154815290600101906020018083116112a357829003601f168201915b50505050508282815181106112d8576112d7615447565b5b602002602001015160200151604001819052506000876040516112fb91906153d0565b90815260200160405180910390206007016000828152602001908152602001600020600201600401805461132e90615416565b80601f016020809104026020016040519081016040528092919081815260200182805461135a90615416565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b50505050508282815181106113bf576113be615447565b5b60200260200101516020015160800181905250600080886040516113e391906153d0565b908152602001604051809103902060070160008381526020019081526020016000206000015490508067ffffffffffffffff81111561142557611424613ebc565b5b60405190808252806020026020018201604052801561145857816020015b60608152602001906001900390816114435790505b5083838151811061146c5761146b615447565b5b60200260200101516000018190525060005b818110156115a45760008960405161149691906153d0565b90815260200160405180910390206007016000848152602001908152602001600020600101600082815260200190815260200160002080546114d790615416565b80601f016020809104026020016040519081016040528092919081815260200182805461150390615416565b80156115505780601f1061152557610100808354040283529160200191611550565b820191906000526020600020905b81548152906001019060200180831161153357829003601f168201915b505050505084848151811061156857611567615447565b5b602002602001015160000151828151811061158657611585615447565b5b6020026020010181905250808061159c906154a5565b91505061147e565b505080806115b1906154a5565b915050610f47565b506000866040516115ca91906153d0565b908152602001604051809103902060080154935060008467ffffffffffffffff8111156115fa576115f9613ebc565b5b60405190808252806020026020018201604052801561163357816020015b611620613e43565b8152602001906001900390816116185790505b50905060005b85811015611dca5760008860405161165191906153d0565b90815260200160405180910390206009016000828152602001908152602001600020600201600101805461168490615416565b80601f01602080910402602001604051908101604052809291908181526020018280546116b090615416565b80156116fd5780601f106116d2576101008083540402835291602001916116fd565b820191906000526020600020905b8154815290600101906020018083116116e057829003601f168201915b505050505082828151811061171557611714615447565b5b6020026020010151602001516020018190525060008860405161173891906153d0565b90815260200160405180910390206009016000828152602001908152602001600020600201600001805461176b90615416565b80601f016020809104026020016040519081016040528092919081815260200182805461179790615416565b80156117e45780601f106117b9576101008083540402835291602001916117e4565b820191906000526020600020905b8154815290600101906020018083116117c757829003601f168201915b50505050508282815181106117fc576117fb615447565b5b6020026020010151602001516000018190525060008860405161181f91906153d0565b90815260200160405180910390206009016000828152602001908152602001600020600201600301805461185290615416565b80601f016020809104026020016040519081016040528092919081815260200182805461187e90615416565b80156118cb5780601f106118a0576101008083540402835291602001916118cb565b820191906000526020600020905b8154815290600101906020018083116118ae57829003601f168201915b50505050508282815181106118e3576118e2615447565b5b6020026020010151602001516060018190525060008860405161190691906153d0565b90815260200160405180910390206009016000828152602001908152602001600020600201600201805461193990615416565b80601f016020809104026020016040519081016040528092919081815260200182805461196590615416565b80156119b25780601f10611987576101008083540402835291602001916119b2565b820191906000526020600020905b81548152906001019060200180831161199557829003601f168201915b50505050508282815181106119ca576119c9615447565b5b602002602001015160200151604001819052506000886040516119ed91906153d0565b908152602001604051809103902060090160008281526020019081526020016000206002016004018054611a2090615416565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4c90615416565b8015611a995780601f10611a6e57610100808354040283529160200191611a99565b820191906000526020600020905b815481529060010190602001808311611a7c57829003601f168201915b5050505050828281518110611ab157611ab0615447565b5b6020026020010151602001516080018190525060008089604051611ad591906153d0565b908152602001604051809103902060090160008381526020019081526020016000206000015490508067ffffffffffffffff811115611b1757611b16613ebc565b5b604051908082528060200260200182016040528015611b5057816020015b611b3d613dd3565b815260200190600190039081611b355790505b50838381518110611b6457611b63615447565b5b60200260200101516000018190525060005b81811015611db55760008a604051611b8e91906153d0565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206000018054611bd290615416565b80601f0160208091040260200160405190810160405280929190818152602001828054611bfe90615416565b8015611c4b5780601f10611c2057610100808354040283529160200191611c4b565b820191906000526020600020905b815481529060010190602001808311611c2e57829003601f168201915b5050505050848481518110611c6357611c62615447565b5b6020026020010151600001518281518110611c8157611c80615447565b5b60200260200101516000018190525060008a604051611ca091906153d0565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206001018054611ce490615416565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1090615416565b8015611d5d5780601f10611d3257610100808354040283529160200191611d5d565b820191906000526020600020905b815481529060010190602001808311611d4057829003601f168201915b5050505050848481518110611d7557611d74615447565b5b6020026020010151600001518281518110611d9357611d92615447565b5b6020026020010151602001819052508080611dad906154a5565b915050611b76565b50508080611dc2906154a5565b915050611639565b506040518060c00160405280600089604051611de691906153d0565b90815260200160405180910390206000018054611e0290615416565b80601f0160208091040260200160405190810160405280929190818152602001828054611e2e90615416565b8015611e7b5780601f10611e5057610100808354040283529160200191611e7b565b820191906000526020600020905b815481529060010190602001808311611e5e57829003601f168201915b50505050508152602001600089604051611e9591906153d0565b90815260200160405180910390206001015481526020018581526020018481526020018381526020018281525095505050505050919050565b80600083604051611edf91906153d0565b90815260200160405180910390206001016000828254611eff919061576b565b925050819055505050565b60008083604051611f1b91906153d0565b90815260200160405180910390206008016000815480929190611f3d906154a5565b91905055905060008260000151519050826020015160000151600085604051611f6691906153d0565b908152602001604051809103902060090160008481526020019081526020016000206002016000019081611f9a9190615699565b50826020015160200151600085604051611fb491906153d0565b908152602001604051809103902060090160008481526020019081526020016000206002016001019081611fe89190615699565b5082602001516040015160008560405161200291906153d0565b9081526020016040518091039020600901600084815260200190815260200160002060020160020190816120369190615699565b5082602001516060015160008560405161205091906153d0565b9081526020016040518091039020600901600084815260200190815260200160002060020160030190816120849190615699565b5082602001516080015160008560405161209e91906153d0565b9081526020016040518091039020600901600084815260200190815260200160002060020160040190816120d29190615699565b50806000856040516120e491906153d0565b908152602001604051809103902060090160008481526020019081526020016000206000018190555060005b8181101561221d578360000151818151811061212f5761212e615447565b5b60200260200101516000015160008660405161214b91906153d0565b90815260200160405180910390206009016000858152602001908152602001600020600101600083815260200190815260200160002060000190816121909190615699565b50836000015181815181106121a8576121a7615447565b5b6020026020010151602001516000866040516121c491906153d0565b90815260200160405180910390206009016000858152602001908152602001600020600101600083815260200190815260200160002060010190816122099190615699565b508080612215906154a5565b915050612110565b5050505050565b61222c613db9565b6000600167ffffffffffffffff81111561224957612248613ebc565b5b60405190808252806020026020018201604052801561228257816020015b61226f613db9565b8152602001906001900390816122675790505b50905060005b60008560405161229891906153d0565b9081526020016040518091039020600401548110156126db576123786000866040516122c491906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060000180546122f490615416565b80601f016020809104026020016040519081016040528092919081815260200182805461232090615416565b801561236d5780601f106123425761010080835404028352916020019161236d565b820191906000526020600020905b81548152906001019060200180831161235057829003601f168201915b50505050508561374a565b156126c857838260008151811061239257612391615447565b5b6020026020010151600001819052506000856040516123b191906153d0565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff8111156123f0576123ef613ebc565b5b60405190808252806020026020018201604052801561242957816020015b612416613dd3565b81526020019060019003908161240e5790505b508260008151811061243e5761243d615447565b5b60200260200101516020018190525060005b60008660405161246091906153d0565b90815260200160405180910390206005016000838152602001908152602001600020600101548110156126c65760008660405161249d91906153d0565b90815260200160405180910390206005016000838152602001908152602001600020600201600082815260200190815260200160002060000180546124e190615416565b80601f016020809104026020016040519081016040528092919081815260200182805461250d90615416565b801561255a5780601f1061252f5761010080835404028352916020019161255a565b820191906000526020600020905b81548152906001019060200180831161253d57829003601f168201915b50505050508360008151811061257357612572615447565b5b602002602001015160200151828151811061259157612590615447565b5b6020026020010151600001819052506000866040516125b091906153d0565b90815260200160405180910390206005016000838152602001908152602001600020600201600082815260200190815260200160002060010180546125f490615416565b80601f016020809104026020016040519081016040528092919081815260200182805461262090615416565b801561266d5780601f106126425761010080835404028352916020019161266d565b820191906000526020600020905b81548152906001019060200180831161265057829003601f168201915b50505050508360008151811061268657612685615447565b5b60200260200101516020015182815181106126a4576126a3615447565b5b60200260200101516020018190525080806126be906154a5565b915050612450565b505b80806126d3906154a5565b915050612288565b50806000815181106126f0576126ef615447565b5b602002602001015191505092915050565b6040518060400160405280600881526020017f617070726f76656400000000000000000000000000000000000000000000000081525060008360405161274791906153d0565b90815260200160405180910390206007016000838152602001908152602001600020600201600401908161277b9190615699565b505050565b612788613e43565b612790613e43565b6000846040516127a091906153d0565b9081526020016040518091039020600701600084815260200190815260200160002060020160010180546127d390615416565b80601f01602080910402602001604051908101604052809291908181526020018280546127ff90615416565b801561284c5780601f106128215761010080835404028352916020019161284c565b820191906000526020600020905b81548152906001019060200180831161282f57829003601f168201915b505050505081602001516020018190525060008460405161286d91906153d0565b9081526020016040518091039020600701600084815260200190815260200160002060020160000180546128a090615416565b80601f01602080910402602001604051908101604052809291908181526020018280546128cc90615416565b80156129195780601f106128ee57610100808354040283529160200191612919565b820191906000526020600020905b8154815290600101906020018083116128fc57829003601f168201915b505050505081602001516000018190525060008460405161293a91906153d0565b90815260200160405180910390206007016000848152602001908152602001600020600201600301805461296d90615416565b80601f016020809104026020016040519081016040528092919081815260200182805461299990615416565b80156129e65780601f106129bb576101008083540402835291602001916129e6565b820191906000526020600020905b8154815290600101906020018083116129c957829003601f168201915b5050505050816020015160600181905250600084604051612a0791906153d0565b908152602001604051809103902060070160008481526020019081526020016000206002016002018054612a3a90615416565b80601f0160208091040260200160405190810160405280929190818152602001828054612a6690615416565b8015612ab35780601f10612a8857610100808354040283529160200191612ab3565b820191906000526020600020905b815481529060010190602001808311612a9657829003601f168201915b5050505050816020015160400181905250600084604051612ad491906153d0565b908152602001604051809103902060070160008481526020019081526020016000206002016004018054612b0790615416565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3390615416565b8015612b805780601f10612b5557610100808354040283529160200191612b80565b820191906000526020600020905b815481529060010190602001808311612b6357829003601f168201915b505050505081602001516080018190525060008085604051612ba291906153d0565b908152602001604051809103902060070160008581526020019081526020016000206000015490508067ffffffffffffffff811115612be457612be3613ebc565b5b604051908082528060200260200182016040528015612c1d57816020015b612c0a613dd3565b815260200190600190039081612c025790505b50826000018190525060005b81811015612e3757600086604051612c4191906153d0565b9081526020016040518091039020600701600086815260200190815260200160002060010160008281526020019081526020016000208054612c8290615416565b80601f0160208091040260200160405190810160405280929190818152602001828054612cae90615416565b8015612cfb5780601f10612cd057610100808354040283529160200191612cfb565b820191906000526020600020905b815481529060010190602001808311612cde57829003601f168201915b505050505083600001518281518110612d1757612d16615447565b5b602002602001015160000181905250612dfe86600088604051612d3a91906153d0565b9081526020016040518091039020600701600088815260200190815260200160002060010160008481526020019081526020016000208054612d7b90615416565b80601f0160208091040260200160405190810160405280929190818152602001828054612da790615416565b8015612df45780601f10612dc957610100808354040283529160200191612df4565b820191906000526020600020905b815481529060010190602001808311612dd757829003601f168201915b50505050506139cd565b83600001518281518110612e1557612e14615447565b5b6020026020010151602001819052508080612e2f906154a5565b915050612c29565b50819250505092915050565b60606000825167ffffffffffffffff811115612e6257612e61613ebc565b5b604051908082528060200260200182016040528015612e9b57816020015b612e88613dd3565b815260200190600190039081612e805790505b50905060005b83518110156131ad5760005b600086604051612ebd91906153d0565b90815260200160405180910390206002015481101561319957612fbb600087604051612ee991906153d0565b908152602001604051809103902060030160008381526020019081526020016000206000018054612f1990615416565b80601f0160208091040260200160405190810160405280929190818152602001828054612f4590615416565b8015612f925780601f10612f6757610100808354040283529160200191612f92565b820191906000526020600020905b815481529060010190602001808311612f7557829003601f168201915b5050505050868481518110612faa57612fa9615447565b5b60200260200101516000015161374a565b1561318557600086604051612fd091906153d0565b90815260200160405180910390206003016000828152602001908152602001600020600001805461300090615416565b80601f016020809104026020016040519081016040528092919081815260200182805461302c90615416565b80156130795780601f1061304e57610100808354040283529160200191613079565b820191906000526020600020905b81548152906001019060200180831161305c57829003601f168201915b505050505083838151811061309157613090615447565b5b6020026020010151600001819052506000866040516130b091906153d0565b9081526020016040518091039020600301600082815260200190815260200160002060010180546130e090615416565b80601f016020809104026020016040519081016040528092919081815260200182805461310c90615416565b80156131595780601f1061312e57610100808354040283529160200191613159565b820191906000526020600020905b81548152906001019060200180831161313c57829003601f168201915b505050505083838151811061317157613170615447565b5b602002602001015160200181905250613186565b5b8080613191906154a5565b915050612ead565b5080806131a5906154a5565b915050612ea1565b508091505092915050565b60005b8151811015613437577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8282815181106131f8576131f7615447565b5b602002602001015160200151146132fc57600082828151811061321e5761321d615447565b5b602002602001015160200151905082828151811061323f5761323e615447565b5b6020026020010151600001516000015160008560405161325f91906153d0565b9081526020016040518091039020600301600083815260200190815260200160002060000190816132909190615699565b508282815181106132a4576132a3615447565b5b602002602001015160000151602001516000856040516132c491906153d0565b9081526020016040518091039020600301600083815260200190815260200160002060010190816132f59190615699565b5050613424565b6000808460405161330d91906153d0565b908152602001604051809103902060020154905060008460405161333191906153d0565b90815260200160405180910390206002016000815480929190613353906154a5565b919050555082828151811061336b5761336a615447565b5b6020026020010151600001516000015160008560405161338b91906153d0565b9081526020016040518091039020600301600083815260200190815260200160002060000190816133bc9190615699565b508282815181106133d0576133cf615447565b5b602002602001015160000151602001516000856040516133f091906153d0565b9081526020016040518091039020600301600083815260200190815260200160002060010190816134219190615699565b50505b808061342f906154a5565b9150506131bb565b505050565b60005b8151811015613745577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82828151811061347c5761347b615447565b5b602002602001015160200151146134d9576134d4838383815181106134a4576134a3615447565b5b6020026020010151602001518484815181106134c3576134c2615447565b5b602002602001015160400151613be0565b613732565b600080846040516134ea91906153d0565b9081526020016040518091039020600401600081548092919061350c906154a5565b91905055905082828151811061352557613524615447565b5b60200260200101516000015160008560405161354191906153d0565b9081526020016040518091039020600501600083815260200190815260200160002060000190816135729190615699565b5082828151811061358657613585615447565b5b602002602001015160400151516000856040516135a391906153d0565b908152602001604051809103902060050160008381526020019081526020016000206001018190555060005b8383815181106135e2576135e1615447565b5b6020026020010151604001515181101561372f5783838151811061360957613608615447565b5b602002602001015160400151818151811061362757613626615447565b5b60200260200101516000015160008660405161364391906153d0565b90815260200160405180910390206005016000848152602001908152602001600020600201600083815260200190815260200160002060000190816136889190615699565b5083838151811061369c5761369b615447565b5b60200260200101516040015181815181106136ba576136b9615447565b5b6020026020010151602001516000866040516136d691906153d0565b908152602001604051809103902060050160008481526020019081526020016000206002016000838152602001908152602001600020600101908161371b9190615699565b508080613727906154a5565b9150506135cf565b50505b808061373d906154a5565b91505061343f565b505050565b6000818051906020012083805190602001200361376a576001905061376f565b600090505b92915050565b600081602001516020015190506000808260405161379391906153d0565b908152602001604051809103902060060160008154809291906137b5906154a5565b9190505590508260200151600001516000836040516137d491906153d0565b9081526020016040518091039020600701600083815260200190815260200160002060020160000190816138089190615699565b5082602001516020015160008360405161382291906153d0565b9081526020016040518091039020600701600083815260200190815260200160002060020160010190816138569190615699565b5082602001516040015160008360405161387091906153d0565b9081526020016040518091039020600701600083815260200190815260200160002060020160020190816138a49190615699565b508260200151606001516000836040516138be91906153d0565b9081526020016040518091039020600701600083815260200190815260200160002060020160030190816138f29190615699565b5082600001515160008360405161390991906153d0565b908152602001604051809103902060070160008381526020019081526020016000206000018190555060005b8360000151518110156139c7578360000151818151811061395957613958615447565b5b602002602001015160008460405161397191906153d0565b90815260200160405180910390206007016000848152602001908152602001600020600101600083815260200190815260200160002090816139b39190615699565b5080806139bf906154a5565b915050613935565b50505050565b606060005b6000846040516139e291906153d0565b908152602001604051809103902060020154811015613ba057613ac2600085604051613a0e91906153d0565b908152602001604051809103902060030160008381526020019081526020016000206000018054613a3e90615416565b80601f0160208091040260200160405190810160405280929190818152602001828054613a6a90615416565b8015613ab75780601f10613a8c57610100808354040283529160200191613ab7565b820191906000526020600020905b815481529060010190602001808311613a9a57829003601f168201915b50505050508461374a565b15613b8d57600084604051613ad791906153d0565b908152602001604051809103902060030160008281526020019081526020016000206001018054613b0790615416565b80601f0160208091040260200160405190810160405280929190818152602001828054613b3390615416565b8015613b805780601f10613b5557610100808354040283529160200191613b80565b820191906000526020600020905b815481529060010190602001808311613b6357829003601f168201915b5050505050915050613bda565b8080613b98906154a5565b9150506139d2565b506040518060400160405280600381526020017f4e2f41000000000000000000000000000000000000000000000000000000000081525090505b92915050565b60005b8151811015613db35760005b600085604051613bff91906153d0565b908152602001604051809103902060020154811015613d9f57613d11600086604051613c2b91906153d0565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206000018054613c6f90615416565b80601f0160208091040260200160405190810160405280929190818152602001828054613c9b90615416565b8015613ce85780601f10613cbd57610100808354040283529160200191613ce8565b820191906000526020600020905b815481529060010190602001808311613ccb57829003601f168201915b5050505050848481518110613d0057613cff615447565b5b60200260200101516000015161374a565b15613d8c57828281518110613d2957613d28615447565b5b602002602001015160200151600086604051613d4591906153d0565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206001019081613d8a9190615699565b505b8080613d97906154a5565b915050613bef565b508080613dab906154a5565b915050613be3565b50505050565b604051806040016040528060608152602001606081525090565b604051806040016040528060608152602001606081525090565b6040518060c001604052806060815260200160008152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060608152602001613e3d613e63565b81525090565b604051806040016040528060608152602001613e5d613e63565b81525090565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613ef482613eab565b810181811067ffffffffffffffff82111715613f1357613f12613ebc565b5b80604052505050565b6000613f26613e92565b9050613f328282613eeb565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115613f6157613f60613ebc565b5b613f6a82613eab565b9050602081019050919050565b82818337600083830152505050565b6000613f99613f9484613f46565b613f1c565b905082815260208101848484011115613fb557613fb4613f41565b5b613fc0848285613f77565b509392505050565b600082601f830112613fdd57613fdc613f3c565b5b8135613fed848260208601613f86565b91505092915050565b600067ffffffffffffffff82111561401157614010613ebc565b5b602082029050602081019050919050565b600080fd5b60006040828403121561403d5761403c613ea6565b5b6140476040613f1c565b9050600082013567ffffffffffffffff81111561406757614066613f37565b5b61407384828501613fc8565b600083015250602082013567ffffffffffffffff81111561409757614096613f37565b5b6140a384828501613fc8565b60208301525092915050565b6000819050919050565b6140c2816140af565b81146140cd57600080fd5b50565b6000813590506140df816140b9565b92915050565b6000604082840312156140fb576140fa613ea6565b5b6141056040613f1c565b9050600082013567ffffffffffffffff81111561412557614124613f37565b5b61413184828501614027565b6000830152506020614145848285016140d0565b60208301525092915050565b600061416461415f84613ff6565b613f1c565b9050808382526020820190506020840283018581111561418757614186614022565b5b835b818110156141ce57803567ffffffffffffffff8111156141ac576141ab613f3c565b5b8086016141b989826140e5565b85526020850194505050602081019050614189565b5050509392505050565b600082601f8301126141ed576141ec613f3c565b5b81356141fd848260208601614151565b91505092915050565b600067ffffffffffffffff82111561422157614220613ebc565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561424d5761424c613ebc565b5b602082029050602081019050919050565b600061427161426c84614232565b613f1c565b9050808382526020820190506020840283018581111561429457614293614022565b5b835b818110156142db57803567ffffffffffffffff8111156142b9576142b8613f3c565b5b8086016142c68982614027565b85526020850194505050602081019050614296565b5050509392505050565b600082601f8301126142fa576142f9613f3c565b5b813561430a84826020860161425e565b91505092915050565b60006060828403121561432957614328613ea6565b5b6143336060613f1c565b9050600082013567ffffffffffffffff81111561435357614352613f37565b5b61435f84828501613fc8565b6000830152506020614373848285016140d0565b602083015250604082013567ffffffffffffffff81111561439757614396613f37565b5b6143a3848285016142e5565b60408301525092915050565b60006143c26143bd84614206565b613f1c565b905080838252602082019050602084028301858111156143e5576143e4614022565b5b835b8181101561442c57803567ffffffffffffffff81111561440a57614409613f3c565b5b8086016144178982614313565b855260208501945050506020810190506143e7565b5050509392505050565b600082601f83011261444b5761444a613f3c565b5b813561445b8482602086016143af565b91505092915050565b60006060828403121561447a57614479613ea6565b5b6144846060613f1c565b9050600082013567ffffffffffffffff8111156144a4576144a3613f37565b5b6144b084828501613fc8565b600083015250602082013567ffffffffffffffff8111156144d4576144d3613f37565b5b6144e0848285016141d8565b602083015250604082013567ffffffffffffffff81111561450457614503613f37565b5b61451084828501614436565b60408301525092915050565b60006020828403121561453257614531613e9c565b5b600082013567ffffffffffffffff8111156145505761454f613ea1565b5b61455c84828501614464565b91505092915050565b6000806040838503121561457c5761457b613e9c565b5b600083013567ffffffffffffffff81111561459a57614599613ea1565b5b6145a685828601613fc8565b925050602083013567ffffffffffffffff8111156145c7576145c6613ea1565b5b6145d385828601613fc8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156146175780820151818401526020810190506145fc565b83811115614626576000848401525b50505050565b6000614637826145dd565b61464181856145e8565b93506146518185602086016145f9565b61465a81613eab565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526146ae828261462c565b915050602083015184820360208601526146c8828261462c565b9150508091505092915050565b60006146e18383614691565b905092915050565b6000602082019050919050565b600061470182614665565b61470b8185614670565b93508360208202850161471d85614681565b8060005b85811015614759578484038952815161473a85826146d5565b9450614745836146e9565b925060208a01995050600181019050614721565b50829750879550505050505092915050565b60006040830160008301518482036000860152614788828261462c565b915050602083015184820360208601526147a282826146f6565b9150508091505092915050565b600060208201905081810360008301526147c9818461476b565b905092915050565b600067ffffffffffffffff8211156147ec576147eb613ebc565b5b602082029050602081019050919050565b600061481061480b846147d1565b613f1c565b9050808382526020820190506020840283018581111561483357614832614022565b5b835b8181101561487a57803567ffffffffffffffff81111561485857614857613f3c565b5b8086016148658982613fc8565b85526020850194505050602081019050614835565b5050509392505050565b600082601f83011261489957614898613f3c565b5b81356148a98482602086016147fd565b91505092915050565b600060a082840312156148c8576148c7613ea6565b5b6148d260a0613f1c565b9050600082013567ffffffffffffffff8111156148f2576148f1613f37565b5b6148fe84828501613fc8565b600083015250602082013567ffffffffffffffff81111561492257614921613f37565b5b61492e84828501613fc8565b602083015250604082013567ffffffffffffffff81111561495257614951613f37565b5b61495e84828501613fc8565b604083015250606082013567ffffffffffffffff81111561498257614981613f37565b5b61498e84828501613fc8565b606083015250608082013567ffffffffffffffff8111156149b2576149b1613f37565b5b6149be84828501613fc8565b60808301525092915050565b6000604082840312156149e0576149df613ea6565b5b6149ea6040613f1c565b9050600082013567ffffffffffffffff811115614a0a57614a09613f37565b5b614a1684828501614884565b600083015250602082013567ffffffffffffffff811115614a3a57614a39613f37565b5b614a46848285016148b2565b60208301525092915050565b600060208284031215614a6857614a67613e9c565b5b600082013567ffffffffffffffff811115614a8657614a85613ea1565b5b614a92848285016149ca565b91505092915050565b600060208284031215614ab157614ab0613e9c565b5b600082013567ffffffffffffffff811115614acf57614ace613ea1565b5b614adb84828501613fc8565b91505092915050565b614aed816140af565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152614b3c828261462c565b91505060208301518482036020860152614b5682826146f6565b9150508091505092915050565b6000614b6f8383614b1f565b905092915050565b6000602082019050919050565b6000614b8f82614af3565b614b998185614afe565b935083602082028501614bab85614b0f565b8060005b85811015614be75784840389528151614bc88582614b63565b9450614bd383614b77565b925060208a01995050600181019050614baf565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614c5d838361462c565b905092915050565b6000602082019050919050565b6000614c7d82614c25565b614c878185614c30565b935083602082028501614c9985614c41565b8060005b85811015614cd55784840389528151614cb68582614c51565b9450614cc183614c65565b925060208a01995050600181019050614c9d565b50829750879550505050505092915050565b600060a0830160008301518482036000860152614d04828261462c565b91505060208301518482036020860152614d1e828261462c565b91505060408301518482036040860152614d38828261462c565b91505060608301518482036060860152614d52828261462c565b91505060808301518482036080860152614d6c828261462c565b9150508091505092915050565b60006040830160008301518482036000860152614d968282614c72565b91505060208301518482036020860152614db08282614ce7565b9150508091505092915050565b6000614dc98383614d79565b905092915050565b6000602082019050919050565b6000614de982614bf9565b614df38185614c04565b935083602082028501614e0585614c15565b8060005b85811015614e415784840389528151614e228582614dbd565b9450614e2d83614dd1565b925060208a01995050600181019050614e09565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152614e9c82826146f6565b91505060208301518482036020860152614eb68282614ce7565b9150508091505092915050565b6000614ecf8383614e7f565b905092915050565b6000602082019050919050565b6000614eef82614e53565b614ef98185614e5e565b935083602082028501614f0b85614e6f565b8060005b85811015614f475784840389528151614f288582614ec3565b9450614f3383614ed7565b925060208a01995050600181019050614f0f565b50829750879550505050505092915050565b600060c0830160008301518482036000860152614f76828261462c565b9150506020830151614f8b6020860182614ae4565b5060408301518482036040860152614fa382826146f6565b91505060608301518482036060860152614fbd8282614b84565b91505060808301518482036080860152614fd78282614dde565b91505060a083015184820360a0860152614ff18282614ee4565b9150508091505092915050565b600060208201905081810360008301526150188184614f59565b905092915050565b6000806040838503121561503757615036613e9c565b5b600083013567ffffffffffffffff81111561505557615054613ea1565b5b61506185828601613fc8565b9250506020615072858286016140d0565b9150509250929050565b60006040828403121561509257615091613ea6565b5b61509c6040613f1c565b9050600082013567ffffffffffffffff8111156150bc576150bb613f37565b5b6150c8848285016142e5565b600083015250602082013567ffffffffffffffff8111156150ec576150eb613f37565b5b6150f8848285016148b2565b60208301525092915050565b6000806040838503121561511b5761511a613e9c565b5b600083013567ffffffffffffffff81111561513957615138613ea1565b5b61514585828601613fc8565b925050602083013567ffffffffffffffff81111561516657615165613ea1565b5b6151728582860161507c565b9150509250929050565b6000819050919050565b61518f8161517c565b811461519a57600080fd5b50565b6000813590506151ac81615186565b92915050565b600080604083850312156151c9576151c8613e9c565b5b600083013567ffffffffffffffff8111156151e7576151e6613ea1565b5b6151f385828601613fc8565b92505060206152048582860161519d565b9150509250929050565b6000604083016000830151848203600086015261522b82826146f6565b915050602083015184820360208601526152458282614ce7565b9150508091505092915050565b6000602082019050818103600083015261526c818461520e565b905092915050565b6000806040838503121561528b5761528a613e9c565b5b600083013567ffffffffffffffff8111156152a9576152a8613ea1565b5b6152b585828601613fc8565b925050602083013567ffffffffffffffff8111156152d6576152d5613ea1565b5b6152e2858286016142e5565b9150509250929050565b600082825260208201905092915050565b600061530882614665565b61531281856152ec565b93508360208202850161532485614681565b8060005b85811015615360578484038952815161534185826146d5565b945061534c836146e9565b925060208a01995050600181019050615328565b50829750879550505050505092915050565b6000602082019050818103600083015261538c81846152fd565b905092915050565b600081905092915050565b60006153aa826145dd565b6153b48185615394565b93506153c48185602086016145f9565b80840191505092915050565b60006153dc828461539f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061542e57607f821691505b602082108103615441576154406153e7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006154b08261517c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036154e2576154e1615476565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261554f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615512565b6155598683615512565b95508019841693508086168417925050509392505050565b6000819050919050565b600061559661559161558c8461517c565b615571565b61517c565b9050919050565b6000819050919050565b6155b08361557b565b6155c46155bc8261559d565b84845461551f565b825550505050565b600090565b6155d96155cc565b6155e48184846155a7565b505050565b5b81811015615608576155fd6000826155d1565b6001810190506155ea565b5050565b601f82111561564d5761561e816154ed565b61562784615502565b81016020851015615636578190505b61564a61564285615502565b8301826155e9565b50505b505050565b600082821c905092915050565b600061567060001984600802615652565b1980831691505092915050565b6000615689838361565f565b9150826002028217905092915050565b6156a2826145dd565b67ffffffffffffffff8111156156bb576156ba613ebc565b5b6156c58254615416565b6156d082828561560c565b600060209050601f83116001811461570357600084156156f1578287015190505b6156fb858261567d565b865550615763565b601f198416615711866154ed565b60005b8281101561573957848901518255600182019150602085019450602081019050615714565b868310156157565784890151615752601f89168261565f565b8355505b6001600288020188555050505b505050505050565b6000615776826140af565b9150615781836140af565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156157bc576157bb615476565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156157f4576157f3615476565b5b82820190509291505056fea264697066735822122047ca94bd451ddcfc1c24b64ff954af094adcb013210a80635625a8715078759d64736f6c634300080f0033";
        public UserDataContractDeploymentBase() : base(BYTECODE) { }
        public UserDataContractDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class ApproveTransactionStageAFunction : ApproveTransactionStageAFunctionBase { }

    [Function("approveTransactionStageA")]
    public class ApproveTransactionStageAFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageBFunction : ApproveTransactionStageBFunctionBase { }

    [Function("approveTransactionStageB", typeof(ApproveTransactionStageBOutputDTO))]
    public class ApproveTransactionStageBFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageCFunction : ApproveTransactionStageCFunctionBase { }

    [Function("approveTransactionStageC")]
    public class ApproveTransactionStageCFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple", "transaction", 2)]
        public virtual TransactionResponse Transaction { get; set; }
    }

    public partial class CreateUserFunction : CreateUserFunctionBase { }

    [Function("createUser")]
    public class CreateUserFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class GetAttributesTransactionFunction : GetAttributesTransactionFunctionBase { }

    [Function("getAttributesTransaction", typeof(GetAttributesTransactionOutputDTO))]
    public class GetAttributesTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class GetCredentialFunction : GetCredentialFunctionBase { }

    [Function("getCredential", typeof(GetCredentialOutputDTO))]
    public class GetCredentialFunctionBase : FunctionMessage
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetCredentialTransactionFunction : GetCredentialTransactionFunctionBase { }

    [Function("getCredentialTransaction", typeof(GetCredentialTransactionOutputDTO))]
    public class GetCredentialTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetUserDataFunction : GetUserDataFunctionBase { }

    [Function("getUserData", typeof(GetUserDataOutputDTO))]
    public class GetUserDataFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class NewTransactionRequestFunction : NewTransactionRequestFunctionBase { }

    [Function("newTransactionRequest")]
    public class NewTransactionRequestFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "request", 1)]
        public virtual TransactionRequest Request { get; set; }
    }

    public partial class UpdateBalanceFunction : UpdateBalanceFunctionBase { }

    [Function("updateBalance")]
    public class UpdateBalanceFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class UpdateUserFunction : UpdateUserFunctionBase { }

    [Function("updateUser")]
    public class UpdateUserFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "update", 1)]
        public virtual Update Update { get; set; }
    }



    public partial class ApproveTransactionStageBOutputDTO : ApproveTransactionStageBOutputDTOBase { }

    [FunctionOutput]
    public class ApproveTransactionStageBOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual TransactionResponse ReturnValue1 { get; set; }
    }





    public partial class GetAttributesTransactionOutputDTO : GetAttributesTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetAttributesTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Attribute> ReturnValue1 { get; set; }
    }

    public partial class GetCredentialOutputDTO : GetCredentialOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetCredentialTransactionOutputDTO : GetCredentialTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetUserDataOutputDTO : GetUserDataOutputDTOBase { }

    [FunctionOutput]
    public class GetUserDataOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual UserDataResponse ReturnValue1 { get; set; }
    }







    public partial class Attribute : AttributeBase { }

    public class AttributeBase
    {
        [Parameter("string", "name", 1)]
        public virtual string Name { get; set; }
        [Parameter("string", "value", 2)]
        public virtual string Value { get; set; }
    }

    public partial class TransactionStamp : TransactionStampBase { }

    public class TransactionStampBase
    {
        [Parameter("string", "fromID", 1)]
        public virtual string FromID { get; set; }
        [Parameter("string", "toID", 2)]
        public virtual string ToID { get; set; }
        [Parameter("string", "date", 3)]
        public virtual string Date { get; set; }
        [Parameter("string", "message", 4)]
        public virtual string Message { get; set; }
        [Parameter("string", "status", 5)]
        public virtual string Status { get; set; }
    }

    public partial class TransactionResponse : TransactionResponseBase { }

    public class TransactionResponseBase
    {
        [Parameter("tuple[]", "attributes", 1)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class CredentialResponse : CredentialResponseBase { }

    public class CredentialResponseBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class TransactionRequest : TransactionRequestBase { }

    public class TransactionRequestBase
    {
        [Parameter("string[]", "attributes", 1)]
        public virtual List<string> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class UserDataResponse : UserDataResponseBase { }

    public class UserDataResponseBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "balance", 2)]
        public virtual BigInteger Balance { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 4)]
        public virtual List<CredentialResponse> Credentials { get; set; }
        [Parameter("tuple[]", "transactionRequests", 5)]
        public virtual List<TransactionRequest> TransactionRequests { get; set; }
        [Parameter("tuple[]", "approvedTransactions", 6)]
        public virtual List<TransactionResponse> ApprovedTransactions { get; set; }
    }

    public partial class AttributeUpdate : AttributeUpdateBase { }

    public class AttributeUpdateBase
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class CredentialUpdate : CredentialUpdateBase { }

    public class CredentialUpdateBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class Update : UpdateBase { }

    public class UpdateBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdate> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdate> Credentials { get; set; }
    }


    public partial class AttributeUpdateGen2 : AttributeUpdateBaseGen2 { }

    public class AttributeUpdateBaseGen2
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
    }



    public partial class CredentialUpdateGen2 : CredentialUpdateBaseGen2 { }

    public class CredentialUpdateBaseGen2
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }



    public partial class UpdateGen2 : UpdateBaseGen2 { }

    public class UpdateBaseGen2
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdateGen2> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdateGen2> Credentials { get; set; }
    }



}
