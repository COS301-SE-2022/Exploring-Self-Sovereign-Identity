using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;
using Nethereum.Contracts.ContractHandlers;
using ExploringSelfSovereignIdentityAPI.Models;
using ExploringSelfSovereignIdentityAPI.Services.Encryption;
using Nethereum.Web3.Accounts;

namespace ExploringSelfSovereignIdentityAPI.Services.NetheriumBlockChain
{
    public class UserDataService : IUserDataService
    {
        /*static string url = "http://127.0.0.1:8545";
        static string privateKey = "734674bd34f2476f15c6d5f6c8c1c7c92e465921e546771d088b958607531d10";
        private readonly string senderAddress = "0x8A1f48B91fbDC94b82E1997c2630466c5FaCf38b";
        private static string contractAddress = "0xA52dD18FF4b5C5E84502C09f31068BAB7aD01C00";

        static Web3 web3 = new Web3(new Nethereum.Web3.Accounts.Account(privateKey), url);

        private ContractHandler contractHandler = web3.Eth.GetContractHandler(contractAddress);

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
        }*/

        private static string url = "http://testchain.nethereum.com:8545";
        private static string privateKey = "0x7580e7fb49df1c861f0050fae31c2224c6aba908e116b8da44ee8cd927b990b0";
        private static Account acc = new Nethereum.Web3.Accounts.Account(privateKey, 444444444500);
        private static Web3 web3 = new Web3(acc, url);

        private static ContractHandler contractHandler;

        private readonly IEncryptionService encryptservice;

        public UserDataService()
        {
            web3.TransactionManager.UseLegacyAsDefault = true;
            encryptservice = new EncryptionService();

            Console.WriteLine(acc.Address);
        }

        private async Task<ContractHandler> deploy()
        {
            var userDataContractDeployment = new UserDataContractDeployment();

            var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<UserDataContractDeployment>().SendRequestAndWaitForReceiptAsync(userDataContractDeployment);
            var contractAddress = transactionReceiptDeployment.ContractAddress;

            return web3.Eth.GetContractHandler(contractAddress);
        }



        public async Task<string> createUser(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var createUserFunction = new CreateUserFunction();
            createUserFunction.Id = id;
            var createUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(createUserFunction);
            return "success";
        }

        public async Task<String> newTransactionRequest(TransactionRequest request)
        {
            if (contractHandler == null) contractHandler = await deploy();

            TransactionRequest tr = new TransactionRequest();

            TransactionStamp stamp = new TransactionStamp();
            stamp.ToID = request.Stamp.ToID;
            stamp.FromID = request.Stamp.FromID;
            stamp.Message = request.Stamp.Message;
            stamp.Date = DateTime.Now.ToString();
            stamp.Status = "pending";

            List<string> attrs = new List<string>();

            for (int i=0; i<request.Attributes.Count; i++) 
            {
                attrs.Add(request.Attributes[i]);
            }

            tr.Attributes = attrs;
            tr.Stamp = stamp;

            var newTransactionRequestFunction = new NewTransactionRequestFunction();
            newTransactionRequestFunction.Request = tr;
            var newTransactionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(newTransactionRequestFunction);

            return "success";
        }

        public async Task<string> approveTransaction(string id, int index)
        {
            if (contractHandler == null) contractHandler = await deploy();

            /* Stage A */
            var approveTransactionStageAFunction = new ApproveTransactionStageAFunction();
            approveTransactionStageAFunction.Id = id;
            approveTransactionStageAFunction.Index = index;
            var approveAFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageAFunction);

            /* Stage B */
            var approveBFunction = new ApproveTransactionStageBFunction();
            approveBFunction.Id = id;
            approveBFunction.Index = index;
            var approveBFunctionTxnReceipDTO = await contractHandler.QueryDeserializingToObjectAsync<ApproveTransactionStageBFunction, ApproveTransactionStageBOutputDTO>(approveBFunction);

            /* Stage C */
            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = approveBFunctionTxnReceipDTO.ReturnValue1.Stamp.FromID;
            approveTransactionStageCFunction.Transaction = approveBFunctionTxnReceipDTO.ReturnValue1;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }

        public async Task<string> declineTransaction(string id, int index)
        {
            var declineTransactionFunction = new DeclineTransactionFunction();
            declineTransactionFunction.Id = id;
            declineTransactionFunction.Index = index;
            var declineTransactionFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(declineTransactionFunction);

            return "success";
        }

        /*public async Task<string> approveTransactionStageC(string id, TransactionResponse transaction)
        {
            
            TransactionResponse tr = new TransactionResponse();

            tr.Attributes = transaction.Attributes;
            tr.Stamp = transaction.Stamp;

            var approveTransactionStageCFunction = new ApproveTransactionStageCFunction();
            approveTransactionStageCFunction.Id = id;
            approveTransactionStageCFunction.Transaction = tr;
            var approveTransactionStageCFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(approveTransactionStageCFunction);

            return "success";
        }*/




        public async Task<string> updateAttributes(string id, AttributeBC[] attributes)
        {
            return "success";
        }

        public async Task<GetAttributesTransactionOutputDTO> getAttributesForTransaction(String id, List<Attribute> attributes)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getAttributesTransaction = new GetAttributesTransactionFunction();
            getAttributesTransaction.Id = id;
            getAttributesTransaction.Attributes = attributes;
            var getTransactionATtributesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetAttributesTransactionFunction, GetAttributesTransactionOutputDTO>(getAttributesTransaction);

            return getTransactionATtributesOutputDTO;
        }

        public async Task<GetUserDataOutputDTO> updateUserData(UpdateGen2 update)
        {
            if (contractHandler == null) contractHandler = await deploy();

            Update u = new Update();
            u.Id = update.Id;

            List<AttributeUpdate> au = new List<AttributeUpdate>();

            for(int i=0;i < update.Attributes.Count;i++)
            {
                AttributeUpdate item = new AttributeUpdate();
                item.Attribute = new Attribute();
                item.Attribute.Name = update.Attributes[i].Attribute.Name;
                //item.Attribute.Value = update.Attributes[i].Attribute.Value;
                item.Attribute.Value = encryptservice.EncryptString(u.Id, update.Attributes[i].Attribute.Value);

                item.Index = new BigInteger(update.Attributes[i].Index);

                au.Add(item);
                
            }


            List<CredentialUpdate> cu = new List<CredentialUpdate>();
            for (int i = 0; i < update.Credentials.Count; i++)
            {
                
                CredentialUpdate item2 = new CredentialUpdate();

                List<Attribute> ca = new List<Attribute>();
                for (int j = 0; j < update.Credentials[i].Attributes.Count; j++)
                {
                    Attribute item3 = new Attribute();
                    item3.Name = update.Credentials[i].Attributes[j].Name; 
                    item3.Value = encryptservice.EncryptString(u.Id, update.Credentials[i].Attributes[j].Value);

                    ca.Add(item3);
                }
                item2.Attributes = ca;

                item2.Organization = update.Credentials[i].Organization;

                item2.Index = new BigInteger(update.Credentials[i].Index);

                cu.Add(item2);

            }

            u.Attributes = au;
            u.Credentials = cu;

            var updateUserFunction = new UpdateUserFunction();
            updateUserFunction.Update = u;
            var updateUserFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateUserFunction);
            return await getUserData(update.Id);
        }

        public async Task<GetUserDataOutputDTO> getUserData(string id)
        {
            if (contractHandler == null) contractHandler = await deploy();

            var getUserDataFunction = new GetUserDataFunction(); 
            getUserDataFunction.Id = id;
            GetUserDataOutputDTO getUserDataOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetUserDataFunction, GetUserDataOutputDTO>(getUserDataFunction);

            getUserDataOutputDTO.ReturnValue1.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id, attribute.Value));

            getUserDataOutputDTO.ReturnValue1.Credentials.ForEach(credential => credential.Attributes.ForEach(attribute => attribute.Value = encryptservice.DecryptString(id,attribute.Value)));

            if (getUserDataOutputDTO.ReturnValue1.Id == "")
                getUserDataOutputDTO.ReturnValue1.Id = "undefined";

            return getUserDataOutputDTO;
        }
    }



    public partial class UserDataContractDeployment : UserDataContractDeploymentBase
    {
        public UserDataContractDeployment() : base(BYTECODE) { }
        public UserDataContractDeployment(string byteCode) : base(byteCode) { }
    }

    public class UserDataContractDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561001057600080fd5b50615ab480620000216000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063755dbe9f1161008c578063cfb5192811610066578063cfb519281461020c578063d4b94b0e1461023c578063d78ab46f14610258578063fa1868ff14610288576100cf565b8063755dbe9f146101a4578063af1a404f146101c0578063b9572975146101dc576100cf565b806301760669146100d457806332d1b291146100f057806333d46c871461010c578063438e644e1461013c578063507ffba51461015857806354ab240314610174575b600080fd5b6100ee60048036038101906100e99190614767565b6102b8565b005b61010a600480360381019061010591906147e6565b610305565b005b61012660048036038101906101219190614842565b61038c565b6040516101339190614a8c565b60405180910390f35b61015660048036038101906101519190614d2f565b610769565b005b610172600480360381019061016d9190614d78565b61077d565b005b61018e60048036038101906101899190614d78565b610875565b60405161019b91906152db565b60405180910390f35b6101be60048036038101906101b991906152fd565b611fe7565b005b6101da60048036038101906101d591906153e1565b61202b565b005b6101f660048036038101906101f19190614842565b61234d565b6040516102039190614a8c565b60405180910390f35b61022660048036038101906102219190614d78565b612832565b6040516102339190615472565b60405180910390f35b610256600480360381019061025191906147e6565b61285b565b005b610272600480360381019061026d91906147e6565b6128e2565b60405161027f91906154d1565b60405180910390f35b6102a2600480360381019061029d91906154f3565b612fad565b6040516102af91906155f1565b60405180910390f35b6102c061332a565b600081602001515111156102e1576102e081600001518260200151613380565b5b600081604001515111156103025761030181600001518260400151613604565b5b50565b61030d61332a565b6040518060400160405280600881526020017f6465636c696e6564000000000000000000000000000000000000000000000000815250600083604051610353919061564f565b9081526020016040518091039020600701600083815260200190815260200160002060020160040190816103879190615872565b505050565b610394614004565b61039c614004565b60005b6000856040516103af919061564f565b90815260200160405180910390206004015481101561075d5761048f6000866040516103db919061564f565b90815260200160405180910390206005016000838152602001908152602001600020600001805461040b90615695565b80601f016020809104026020016040519081016040528092919081815260200182805461043790615695565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b505050505085613912565b1561074a57838260000181905250600080866040516104ae919061564f565b9081526020016040518091039020600501600083815260200190815260200160002060010154905060008167ffffffffffffffff8111156104f2576104f1614107565b5b60405190808252806020026020018201604052801561052b57816020015b61051861401e565b8152602001906001900390816105105790505b50905060005b8281101561073457600088604051610549919061564f565b908152602001604051809103902060050160008581526020019081526020016000206002016000828152602001908152602001600020600001805461058d90615695565b80601f01602080910402602001604051908101604052809291908181526020018280546105b990615695565b80156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b505050505082828151811061061e5761061d615944565b5b60200260200101516000018190525060008860405161063d919061564f565b908152602001604051809103902060050160008581526020019081526020016000206002016000828152602001908152602001600020600101805461068190615695565b80601f01602080910402602001604051908101604052809291908181526020018280546106ad90615695565b80156106fa5780601f106106cf576101008083540402835291602001916106fa565b820191906000526020600020905b8154815290600101906020018083116106dd57829003601f168201915b505050505082828151811061071257610711615944565b5b602002602001015160200181905250808061072c906159a2565b915050610531565b5080846020018190525083945050505050610763565b8080610755906159a2565b91505061039f565b50809150505b92915050565b61077161332a565b61077a8161393d565b50565b61078561332a565b80600082604051610796919061564f565b908152602001604051809103902060000190816107b39190615872565b50600080826040516107c5919061564f565b908152602001604051809103902060020181905550600080826040516107eb919061564f565b90815260200160405180910390206004018190555060008082604051610811919061564f565b90815260200160405180910390206006018190555060008082604051610837919061564f565b9081526020016040518091039020600801819055506000808260405161085d919061564f565b9081526020016040518091039020600a018190555050565b61087d614038565b61088561332a565b60008083604051610896919061564f565b908152602001604051809103902060020154905060008167ffffffffffffffff8111156108c6576108c5614107565b5b6040519080825280602002602001820160405280156108ff57816020015b6108ec61401e565b8152602001906001900390816108e45790505b50905060005b600085604051610915919061564f565b908152602001604051809103902060020154811015610b015760008560405161093e919061564f565b90815260200160405180910390206003016000828152602001908152602001600020600001805461096e90615695565b80601f016020809104026020016040519081016040528092919081815260200182805461099a90615695565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b50505050508282815181106109ff576109fe615944565b5b602002602001015160000181905250600085604051610a1e919061564f565b908152602001604051809103902060030160008281526020019081526020016000206001018054610a4e90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7a90615695565b8015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b5050505050828281518110610adf57610ade615944565b5b6020026020010151602001819052508080610af9906159a2565b915050610905565b50600084604051610b12919061564f565b908152602001604051809103902060040154915060008267ffffffffffffffff811115610b4257610b41614107565b5b604051908082528060200260200182016040528015610b7b57816020015b610b68614004565b815260200190600190039081610b605790505b50905060005b600086604051610b91919061564f565b908152602001604051809103902060040154811015610fc057600086604051610bba919061564f565b908152602001604051809103902060050160008281526020019081526020016000206000018054610bea90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1690615695565b8015610c635780601f10610c3857610100808354040283529160200191610c63565b820191906000526020600020905b815481529060010190602001808311610c4657829003601f168201915b5050505050828281518110610c7b57610c7a615944565b5b602002602001015160000181905250600086604051610c9a919061564f565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff811115610cd957610cd8614107565b5b604051908082528060200260200182016040528015610d1257816020015b610cff61401e565b815260200190600190039081610cf75790505b50828281518110610d2657610d25615944565b5b60200260200101516020018190525060005b600087604051610d48919061564f565b9081526020016040518091039020600501600083815260200190815260200160002060010154811015610fac57600087604051610d85919061564f565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206000018054610dc990615695565b80601f0160208091040260200160405190810160405280929190818152602001828054610df590615695565b8015610e425780601f10610e1757610100808354040283529160200191610e42565b820191906000526020600020905b815481529060010190602001808311610e2557829003601f168201915b5050505050838381518110610e5a57610e59615944565b5b6020026020010151602001518281518110610e7857610e77615944565b5b602002602001015160000181905250600087604051610e97919061564f565b9081526020016040518091039020600501600083815260200190815260200160002060020160008281526020019081526020016000206001018054610edb90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0790615695565b8015610f545780601f10610f2957610100808354040283529160200191610f54565b820191906000526020600020905b815481529060010190602001808311610f3757829003601f168201915b5050505050838381518110610f6c57610f6b615944565b5b6020026020010151602001518281518110610f8a57610f89615944565b5b6020026020010151602001819052508080610fa4906159a2565b915050610d38565b508080610fb8906159a2565b915050610b81565b50600085604051610fd1919061564f565b908152602001604051809103902060060154925060008086604051610ff6919061564f565b90815260200160405180910390206006015467ffffffffffffffff81111561102157611020614107565b5b60405190808252806020026020018201604052801561105a57816020015b61104761406e565b81526020019060019003908161103f5790505b50905060005b848110156116d257600087604051611078919061564f565b9081526020016040518091039020600701600082815260200190815260200160002060020160010180546110ab90615695565b80601f01602080910402602001604051908101604052809291908181526020018280546110d790615695565b80156111245780601f106110f957610100808354040283529160200191611124565b820191906000526020600020905b81548152906001019060200180831161110757829003601f168201915b505050505082828151811061113c5761113b615944565b5b6020026020010151602001516020018190525060008760405161115f919061564f565b90815260200160405180910390206007016000828152602001908152602001600020600201600001805461119290615695565b80601f01602080910402602001604051908101604052809291908181526020018280546111be90615695565b801561120b5780601f106111e05761010080835404028352916020019161120b565b820191906000526020600020905b8154815290600101906020018083116111ee57829003601f168201915b505050505082828151811061122357611222615944565b5b60200260200101516020015160000181905250600087604051611246919061564f565b90815260200160405180910390206007016000828152602001908152602001600020600201600301805461127990615695565b80601f01602080910402602001604051908101604052809291908181526020018280546112a590615695565b80156112f25780601f106112c7576101008083540402835291602001916112f2565b820191906000526020600020905b8154815290600101906020018083116112d557829003601f168201915b505050505082828151811061130a57611309615944565b5b6020026020010151602001516060018190525060008760405161132d919061564f565b90815260200160405180910390206007016000828152602001908152602001600020600201600201805461136090615695565b80601f016020809104026020016040519081016040528092919081815260200182805461138c90615695565b80156113d95780601f106113ae576101008083540402835291602001916113d9565b820191906000526020600020905b8154815290600101906020018083116113bc57829003601f168201915b50505050508282815181106113f1576113f0615944565b5b60200260200101516020015160400181905250600087604051611414919061564f565b90815260200160405180910390206007016000828152602001908152602001600020600201600401805461144790615695565b80601f016020809104026020016040519081016040528092919081815260200182805461147390615695565b80156114c05780601f10611495576101008083540402835291602001916114c0565b820191906000526020600020905b8154815290600101906020018083116114a357829003601f168201915b50505050508282815181106114d8576114d7615944565b5b60200260200101516020015160800181905250600080886040516114fc919061564f565b908152602001604051809103902060070160008381526020019081526020016000206000015490508067ffffffffffffffff81111561153e5761153d614107565b5b60405190808252806020026020018201604052801561157157816020015b606081526020019060019003908161155c5790505b5083838151811061158557611584615944565b5b60200260200101516000018190525060005b818110156116bd576000896040516115af919061564f565b90815260200160405180910390206007016000848152602001908152602001600020600101600082815260200190815260200160002080546115f090615695565b80601f016020809104026020016040519081016040528092919081815260200182805461161c90615695565b80156116695780601f1061163e57610100808354040283529160200191611669565b820191906000526020600020905b81548152906001019060200180831161164c57829003601f168201915b505050505084848151811061168157611680615944565b5b602002602001015160000151828151811061169f5761169e615944565b5b602002602001018190525080806116b5906159a2565b915050611597565b505080806116ca906159a2565b915050611060565b506000866040516116e3919061564f565b908152602001604051809103902060080154935060008467ffffffffffffffff81111561171357611712614107565b5b60405190808252806020026020018201604052801561174c57816020015b61173961408e565b8152602001906001900390816117315790505b50905060005b85811015611ee35760008860405161176a919061564f565b90815260200160405180910390206009016000828152602001908152602001600020600201600101805461179d90615695565b80601f01602080910402602001604051908101604052809291908181526020018280546117c990615695565b80156118165780601f106117eb57610100808354040283529160200191611816565b820191906000526020600020905b8154815290600101906020018083116117f957829003601f168201915b505050505082828151811061182e5761182d615944565b5b60200260200101516020015160200181905250600088604051611851919061564f565b90815260200160405180910390206009016000828152602001908152602001600020600201600001805461188490615695565b80601f01602080910402602001604051908101604052809291908181526020018280546118b090615695565b80156118fd5780601f106118d2576101008083540402835291602001916118fd565b820191906000526020600020905b8154815290600101906020018083116118e057829003601f168201915b505050505082828151811061191557611914615944565b5b60200260200101516020015160000181905250600088604051611938919061564f565b90815260200160405180910390206009016000828152602001908152602001600020600201600301805461196b90615695565b80601f016020809104026020016040519081016040528092919081815260200182805461199790615695565b80156119e45780601f106119b9576101008083540402835291602001916119e4565b820191906000526020600020905b8154815290600101906020018083116119c757829003601f168201915b50505050508282815181106119fc576119fb615944565b5b60200260200101516020015160600181905250600088604051611a1f919061564f565b908152602001604051809103902060090160008281526020019081526020016000206002016002018054611a5290615695565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7e90615695565b8015611acb5780601f10611aa057610100808354040283529160200191611acb565b820191906000526020600020905b815481529060010190602001808311611aae57829003601f168201915b5050505050828281518110611ae357611ae2615944565b5b60200260200101516020015160400181905250600088604051611b06919061564f565b908152602001604051809103902060090160008281526020019081526020016000206002016004018054611b3990615695565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6590615695565b8015611bb25780601f10611b8757610100808354040283529160200191611bb2565b820191906000526020600020905b815481529060010190602001808311611b9557829003601f168201915b5050505050828281518110611bca57611bc9615944565b5b6020026020010151602001516080018190525060008089604051611bee919061564f565b908152602001604051809103902060090160008381526020019081526020016000206000015490508067ffffffffffffffff811115611c3057611c2f614107565b5b604051908082528060200260200182016040528015611c6957816020015b611c5661401e565b815260200190600190039081611c4e5790505b50838381518110611c7d57611c7c615944565b5b60200260200101516000018190525060005b81811015611ece5760008a604051611ca7919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206000018054611ceb90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1790615695565b8015611d645780601f10611d3957610100808354040283529160200191611d64565b820191906000526020600020905b815481529060010190602001808311611d4757829003601f168201915b5050505050848481518110611d7c57611d7b615944565b5b6020026020010151600001518281518110611d9a57611d99615944565b5b60200260200101516000018190525060008a604051611db9919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060010160008281526020019081526020016000206001018054611dfd90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054611e2990615695565b8015611e765780601f10611e4b57610100808354040283529160200191611e76565b820191906000526020600020905b815481529060010190602001808311611e5957829003601f168201915b5050505050848481518110611e8e57611e8d615944565b5b6020026020010151600001518281518110611eac57611eab615944565b5b6020026020010151602001819052508080611ec6906159a2565b915050611c8f565b50508080611edb906159a2565b915050611752565b506040518060c00160405280600089604051611eff919061564f565b90815260200160405180910390206000018054611f1b90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054611f4790615695565b8015611f945780601f10611f6957610100808354040283529160200191611f94565b820191906000526020600020905b815481529060010190602001808311611f7757829003601f168201915b50505050508152602001600089604051611fae919061564f565b90815260200160405180910390206001015481526020018581526020018481526020018381526020018281525095505050505050919050565b611fef61332a565b80600083604051612000919061564f565b9081526020016040518091039020600101600082825461202091906159ea565b925050819055505050565b61203361332a565b60008083604051612044919061564f565b90815260200160405180910390206008016000815480929190612066906159a2565b9190505590506000826000015151905082602001516000015160008560405161208f919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060020160000190816120c39190615872565b508260200151602001516000856040516120dd919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060020160010190816121119190615872565b5082602001516040015160008560405161212b919061564f565b90815260200160405180910390206009016000848152602001908152602001600020600201600201908161215f9190615872565b50826020015160600151600085604051612179919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060020160030190816121ad9190615872565b508260200151608001516000856040516121c7919061564f565b9081526020016040518091039020600901600084815260200190815260200160002060020160040190816121fb9190615872565b508060008560405161220d919061564f565b908152602001604051809103902060090160008481526020019081526020016000206000018190555060005b81811015612346578360000151818151811061225857612257615944565b5b602002602001015160000151600086604051612274919061564f565b90815260200160405180910390206009016000858152602001908152602001600020600101600083815260200190815260200160002060000190816122b99190615872565b50836000015181815181106122d1576122d0615944565b5b6020026020010151602001516000866040516122ed919061564f565b90815260200160405180910390206009016000858152602001908152602001600020600101600083815260200190815260200160002060010190816123329190615872565b50808061233e906159a2565b915050612239565b5050505050565b612355614004565b61235d61332a565b6000600167ffffffffffffffff81111561237a57612379614107565b5b6040519080825280602002602001820160405280156123b357816020015b6123a0614004565b8152602001906001900390816123985790505b50905060005b6000856040516123c9919061564f565b90815260200160405180910390206004015481101561280c576124a96000866040516123f5919061564f565b90815260200160405180910390206005016000838152602001908152602001600020600001805461242590615695565b80601f016020809104026020016040519081016040528092919081815260200182805461245190615695565b801561249e5780601f106124735761010080835404028352916020019161249e565b820191906000526020600020905b81548152906001019060200180831161248157829003601f168201915b505050505085613912565b156127f95783826000815181106124c3576124c2615944565b5b6020026020010151600001819052506000856040516124e2919061564f565b908152602001604051809103902060050160008281526020019081526020016000206001015467ffffffffffffffff81111561252157612520614107565b5b60405190808252806020026020018201604052801561255a57816020015b61254761401e565b81526020019060019003908161253f5790505b508260008151811061256f5761256e615944565b5b60200260200101516020018190525060005b600086604051612591919061564f565b90815260200160405180910390206005016000838152602001908152602001600020600101548110156127f7576000866040516125ce919061564f565b908152602001604051809103902060050160008381526020019081526020016000206002016000828152602001908152602001600020600001805461261290615695565b80601f016020809104026020016040519081016040528092919081815260200182805461263e90615695565b801561268b5780601f106126605761010080835404028352916020019161268b565b820191906000526020600020905b81548152906001019060200180831161266e57829003601f168201915b5050505050836000815181106126a4576126a3615944565b5b60200260200101516020015182815181106126c2576126c1615944565b5b6020026020010151600001819052506000866040516126e1919061564f565b908152602001604051809103902060050160008381526020019081526020016000206002016000828152602001908152602001600020600101805461272590615695565b80601f016020809104026020016040519081016040528092919081815260200182805461275190615695565b801561279e5780601f106127735761010080835404028352916020019161279e565b820191906000526020600020905b81548152906001019060200180831161278157829003601f168201915b5050505050836000815181106127b7576127b6615944565b5b60200260200101516020015182815181106127d5576127d4615944565b5b60200260200101516020018190525080806127ef906159a2565b915050612581565b505b8080612804906159a2565b9150506123b9565b508060008151811061282157612820615944565b5b602002602001015191505092915050565b600080829050600081510361284d576000801b915050612856565b60208301519150505b919050565b61286361332a565b6040518060400160405280600881526020017f617070726f7665640000000000000000000000000000000000000000000000008152506000836040516128a9919061564f565b9081526020016040518091039020600701600083815260200190815260200160002060020160040190816128dd9190615872565b505050565b6128ea61408e565b6128f261332a565b6128fa61408e565b60008460405161290a919061564f565b90815260200160405180910390206007016000848152602001908152602001600020600201600101805461293d90615695565b80601f016020809104026020016040519081016040528092919081815260200182805461296990615695565b80156129b65780601f1061298b576101008083540402835291602001916129b6565b820191906000526020600020905b81548152906001019060200180831161299957829003601f168201915b50505050508160200151602001819052506000846040516129d7919061564f565b908152602001604051809103902060070160008481526020019081526020016000206002016000018054612a0a90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612a3690615695565b8015612a835780601f10612a5857610100808354040283529160200191612a83565b820191906000526020600020905b815481529060010190602001808311612a6657829003601f168201915b5050505050816020015160000181905250600084604051612aa4919061564f565b908152602001604051809103902060070160008481526020019081526020016000206002016003018054612ad790615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612b0390615695565b8015612b505780601f10612b2557610100808354040283529160200191612b50565b820191906000526020600020905b815481529060010190602001808311612b3357829003601f168201915b5050505050816020015160600181905250600084604051612b71919061564f565b908152602001604051809103902060070160008481526020019081526020016000206002016002018054612ba490615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612bd090615695565b8015612c1d5780601f10612bf257610100808354040283529160200191612c1d565b820191906000526020600020905b815481529060010190602001808311612c0057829003601f168201915b5050505050816020015160400181905250600084604051612c3e919061564f565b908152602001604051809103902060070160008481526020019081526020016000206002016004018054612c7190615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612c9d90615695565b8015612cea5780601f10612cbf57610100808354040283529160200191612cea565b820191906000526020600020905b815481529060010190602001808311612ccd57829003601f168201915b505050505081602001516080018190525060008085604051612d0c919061564f565b908152602001604051809103902060070160008581526020019081526020016000206000015490508067ffffffffffffffff811115612d4e57612d4d614107565b5b604051908082528060200260200182016040528015612d8757816020015b612d7461401e565b815260200190600190039081612d6c5790505b50826000018190525060005b81811015612fa157600086604051612dab919061564f565b9081526020016040518091039020600701600086815260200190815260200160002060010160008281526020019081526020016000208054612dec90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612e1890615695565b8015612e655780601f10612e3a57610100808354040283529160200191612e65565b820191906000526020600020905b815481529060010190602001808311612e4857829003601f168201915b505050505083600001518281518110612e8157612e80615944565b5b602002602001015160000181905250612f6886600088604051612ea4919061564f565b9081526020016040518091039020600701600088815260200190815260200160002060010160008481526020019081526020016000208054612ee590615695565b80601f0160208091040260200160405190810160405280929190818152602001828054612f1190615695565b8015612f5e5780601f10612f3357610100808354040283529160200191612f5e565b820191906000526020600020905b815481529060010190602001808311612f4157829003601f168201915b5050505050613c10565b83600001518281518110612f7f57612f7e615944565b5b6020026020010151602001819052508080612f99906159a2565b915050612d93565b50819250505092915050565b6060612fb761332a565b6000825167ffffffffffffffff811115612fd457612fd3614107565b5b60405190808252806020026020018201604052801561300d57816020015b612ffa61401e565b815260200190600190039081612ff25790505b50905060005b835181101561331f5760005b60008660405161302f919061564f565b90815260200160405180910390206002015481101561330b5761312d60008760405161305b919061564f565b90815260200160405180910390206003016000838152602001908152602001600020600001805461308b90615695565b80601f01602080910402602001604051908101604052809291908181526020018280546130b790615695565b80156131045780601f106130d957610100808354040283529160200191613104565b820191906000526020600020905b8154815290600101906020018083116130e757829003601f168201915b505050505086848151811061311c5761311b615944565b5b602002602001015160000151613912565b156132f757600086604051613142919061564f565b90815260200160405180910390206003016000828152602001908152602001600020600001805461317290615695565b80601f016020809104026020016040519081016040528092919081815260200182805461319e90615695565b80156131eb5780601f106131c0576101008083540402835291602001916131eb565b820191906000526020600020905b8154815290600101906020018083116131ce57829003601f168201915b505050505083838151811061320357613202615944565b5b602002602001015160000181905250600086604051613222919061564f565b90815260200160405180910390206003016000828152602001908152602001600020600101805461325290615695565b80601f016020809104026020016040519081016040528092919081815260200182805461327e90615695565b80156132cb5780601f106132a0576101008083540402835291602001916132cb565b820191906000526020600020905b8154815290600101906020018083116132ae57829003601f168201915b50505050508383815181106132e3576132e2615944565b5b6020026020010151602001819052506132f8565b5b8080613303906159a2565b91505061301f565b508080613317906159a2565b915050613013565b508091505092915050565b60007394618601fe6cb8912b274e5a00453949a57f8c1e90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361337c575061337e565b505b565b60005b81518110156135ff577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8282815181106133c0576133bf615944565b5b602002602001015160200151146134c45760008282815181106133e6576133e5615944565b5b602002602001015160200151905082828151811061340757613406615944565b5b60200260200101516000015160000151600085604051613427919061564f565b9081526020016040518091039020600301600083815260200190815260200160002060000190816134589190615872565b5082828151811061346c5761346b615944565b5b6020026020010151600001516020015160008560405161348c919061564f565b9081526020016040518091039020600301600083815260200190815260200160002060010190816134bd9190615872565b50506135ec565b600080846040516134d5919061564f565b90815260200160405180910390206002015490506000846040516134f9919061564f565b9081526020016040518091039020600201600081548092919061351b906159a2565b919050555082828151811061353357613532615944565b5b60200260200101516000015160000151600085604051613553919061564f565b9081526020016040518091039020600301600083815260200190815260200160002060000190816135849190615872565b5082828151811061359857613597615944565b5b602002602001015160000151602001516000856040516135b8919061564f565b9081526020016040518091039020600301600083815260200190815260200160002060010190816135e99190615872565b50505b80806135f7906159a2565b915050613383565b505050565b60005b815181101561390d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82828151811061364457613643615944565b5b602002602001015160200151146136a15761369c8383838151811061366c5761366b615944565b5b60200260200101516020015184848151811061368b5761368a615944565b5b602002602001015160400151613e2b565b6138fa565b600080846040516136b2919061564f565b908152602001604051809103902060040160008154809291906136d4906159a2565b9190505590508282815181106136ed576136ec615944565b5b602002602001015160000151600085604051613709919061564f565b90815260200160405180910390206005016000838152602001908152602001600020600001908161373a9190615872565b5082828151811061374e5761374d615944565b5b6020026020010151604001515160008560405161376b919061564f565b908152602001604051809103902060050160008381526020019081526020016000206001018190555060005b8383815181106137aa576137a9615944565b5b602002602001015160400151518110156138f7578383815181106137d1576137d0615944565b5b60200260200101516040015181815181106137ef576137ee615944565b5b60200260200101516000015160008660405161380b919061564f565b90815260200160405180910390206005016000848152602001908152602001600020600201600083815260200190815260200160002060000190816138509190615872565b5083838151811061386457613863615944565b5b602002602001015160400151818151811061388257613881615944565b5b60200260200101516020015160008660405161389e919061564f565b90815260200160405180910390206005016000848152602001908152602001600020600201600083815260200190815260200160002060010190816138e39190615872565b5080806138ef906159a2565b915050613797565b50505b8080613905906159a2565b915050613607565b505050565b600081805190602001208380519060200120036139325760019050613937565b600090505b92915050565b600081602001516020015190506000808260405161395b919061564f565b9081526020016040518091039020600601600081548092919061397d906159a2565b91905055905082602001516000015160008360405161399c919061564f565b9081526020016040518091039020600701600083815260200190815260200160002060020160000190816139d09190615872565b508260200151602001516000836040516139ea919061564f565b908152602001604051809103902060070160008381526020019081526020016000206002016001019081613a1e9190615872565b50826020015160400151600083604051613a38919061564f565b908152602001604051809103902060070160008381526020019081526020016000206002016002019081613a6c9190615872565b50826020015160600151600083604051613a86919061564f565b908152602001604051809103902060070160008381526020019081526020016000206002016003019081613aba9190615872565b506040518060400160405280600781526020017f70656e64696e6700000000000000000000000000000000000000000000000000815250600083604051613b01919061564f565b908152602001604051809103902060070160008381526020019081526020016000206002016004019081613b359190615872565b50826000015151600083604051613b4c919061564f565b908152602001604051809103902060070160008381526020019081526020016000206000018190555060005b836000015151811015613c0a5783600001518181518110613b9c57613b9b615944565b5b6020026020010151600084604051613bb4919061564f565b9081526020016040518091039020600701600084815260200190815260200160002060010160008381526020019081526020016000209081613bf69190615872565b508080613c02906159a2565b915050613b78565b50505050565b6060613c1a61332a565b60005b600084604051613c2d919061564f565b908152602001604051809103902060020154811015613deb57613d0d600085604051613c59919061564f565b908152602001604051809103902060030160008381526020019081526020016000206000018054613c8990615695565b80601f0160208091040260200160405190810160405280929190818152602001828054613cb590615695565b8015613d025780601f10613cd757610100808354040283529160200191613d02565b820191906000526020600020905b815481529060010190602001808311613ce557829003601f168201915b505050505084613912565b15613dd857600084604051613d22919061564f565b908152602001604051809103902060030160008281526020019081526020016000206001018054613d5290615695565b80601f0160208091040260200160405190810160405280929190818152602001828054613d7e90615695565b8015613dcb5780601f10613da057610100808354040283529160200191613dcb565b820191906000526020600020905b815481529060010190602001808311613dae57829003601f168201915b5050505050915050613e25565b8080613de3906159a2565b915050613c1d565b506040518060400160405280600381526020017f4e2f41000000000000000000000000000000000000000000000000000000000081525090505b92915050565b60005b8151811015613ffe5760005b600085604051613e4a919061564f565b908152602001604051809103902060020154811015613fea57613f5c600086604051613e76919061564f565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206000018054613eba90615695565b80601f0160208091040260200160405190810160405280929190818152602001828054613ee690615695565b8015613f335780601f10613f0857610100808354040283529160200191613f33565b820191906000526020600020905b815481529060010190602001808311613f1657829003601f168201915b5050505050848481518110613f4b57613f4a615944565b5b602002602001015160000151613912565b15613fd757828281518110613f7457613f73615944565b5b602002602001015160200151600086604051613f90919061564f565b9081526020016040518091039020600501600086815260200190815260200160002060020160008381526020019081526020016000206001019081613fd59190615872565b505b8080613fe2906159a2565b915050613e3a565b508080613ff6906159a2565b915050613e2e565b50505050565b604051806040016040528060608152602001606081525090565b604051806040016040528060608152602001606081525090565b6040518060c001604052806060815260200160008152602001606081526020016060815260200160608152602001606081525090565b6040518060400160405280606081526020016140886140ae565b81525090565b6040518060400160405280606081526020016140a86140ae565b81525090565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61413f826140f6565b810181811067ffffffffffffffff8211171561415e5761415d614107565b5b80604052505050565b60006141716140dd565b905061417d8282614136565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156141ac576141ab614107565b5b6141b5826140f6565b9050602081019050919050565b82818337600083830152505050565b60006141e46141df84614191565b614167565b905082815260208101848484011115614200576141ff61418c565b5b61420b8482856141c2565b509392505050565b600082601f83011261422857614227614187565b5b81356142388482602086016141d1565b91505092915050565b600067ffffffffffffffff82111561425c5761425b614107565b5b602082029050602081019050919050565b600080fd5b600060408284031215614288576142876140f1565b5b6142926040614167565b9050600082013567ffffffffffffffff8111156142b2576142b1614182565b5b6142be84828501614213565b600083015250602082013567ffffffffffffffff8111156142e2576142e1614182565b5b6142ee84828501614213565b60208301525092915050565b6000819050919050565b61430d816142fa565b811461431857600080fd5b50565b60008135905061432a81614304565b92915050565b600060408284031215614346576143456140f1565b5b6143506040614167565b9050600082013567ffffffffffffffff8111156143705761436f614182565b5b61437c84828501614272565b60008301525060206143908482850161431b565b60208301525092915050565b60006143af6143aa84614241565b614167565b905080838252602082019050602084028301858111156143d2576143d161426d565b5b835b8181101561441957803567ffffffffffffffff8111156143f7576143f6614187565b5b8086016144048982614330565b855260208501945050506020810190506143d4565b5050509392505050565b600082601f83011261443857614437614187565b5b813561444884826020860161439c565b91505092915050565b600067ffffffffffffffff82111561446c5761446b614107565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561449857614497614107565b5b602082029050602081019050919050565b60006144bc6144b78461447d565b614167565b905080838252602082019050602084028301858111156144df576144de61426d565b5b835b8181101561452657803567ffffffffffffffff81111561450457614503614187565b5b8086016145118982614272565b855260208501945050506020810190506144e1565b5050509392505050565b600082601f83011261454557614544614187565b5b81356145558482602086016144a9565b91505092915050565b600060608284031215614574576145736140f1565b5b61457e6060614167565b9050600082013567ffffffffffffffff81111561459e5761459d614182565b5b6145aa84828501614213565b60008301525060206145be8482850161431b565b602083015250604082013567ffffffffffffffff8111156145e2576145e1614182565b5b6145ee84828501614530565b60408301525092915050565b600061460d61460884614451565b614167565b905080838252602082019050602084028301858111156146305761462f61426d565b5b835b8181101561467757803567ffffffffffffffff81111561465557614654614187565b5b808601614662898261455e565b85526020850194505050602081019050614632565b5050509392505050565b600082601f83011261469657614695614187565b5b81356146a68482602086016145fa565b91505092915050565b6000606082840312156146c5576146c46140f1565b5b6146cf6060614167565b9050600082013567ffffffffffffffff8111156146ef576146ee614182565b5b6146fb84828501614213565b600083015250602082013567ffffffffffffffff81111561471f5761471e614182565b5b61472b84828501614423565b602083015250604082013567ffffffffffffffff81111561474f5761474e614182565b5b61475b84828501614681565b60408301525092915050565b60006020828403121561477d5761477c6140e7565b5b600082013567ffffffffffffffff81111561479b5761479a6140ec565b5b6147a7848285016146af565b91505092915050565b6000819050919050565b6147c3816147b0565b81146147ce57600080fd5b50565b6000813590506147e0816147ba565b92915050565b600080604083850312156147fd576147fc6140e7565b5b600083013567ffffffffffffffff81111561481b5761481a6140ec565b5b61482785828601614213565b9250506020614838858286016147d1565b9150509250929050565b60008060408385031215614859576148586140e7565b5b600083013567ffffffffffffffff811115614877576148766140ec565b5b61488385828601614213565b925050602083013567ffffffffffffffff8111156148a4576148a36140ec565b5b6148b085828601614213565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156148f45780820151818401526020810190506148d9565b83811115614903576000848401525b50505050565b6000614914826148ba565b61491e81856148c5565b935061492e8185602086016148d6565b614937816140f6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000604083016000830151848203600086015261498b8282614909565b915050602083015184820360208601526149a58282614909565b9150508091505092915050565b60006149be838361496e565b905092915050565b6000602082019050919050565b60006149de82614942565b6149e8818561494d565b9350836020820285016149fa8561495e565b8060005b85811015614a365784840389528151614a1785826149b2565b9450614a22836149c6565b925060208a019950506001810190506149fe565b50829750879550505050505092915050565b60006040830160008301518482036000860152614a658282614909565b91505060208301518482036020860152614a7f82826149d3565b9150508091505092915050565b60006020820190508181036000830152614aa68184614a48565b905092915050565b600067ffffffffffffffff821115614ac957614ac8614107565b5b602082029050602081019050919050565b6000614aed614ae884614aae565b614167565b90508083825260208201905060208402830185811115614b1057614b0f61426d565b5b835b81811015614b5757803567ffffffffffffffff811115614b3557614b34614187565b5b808601614b428982614213565b85526020850194505050602081019050614b12565b5050509392505050565b600082601f830112614b7657614b75614187565b5b8135614b86848260208601614ada565b91505092915050565b600060a08284031215614ba557614ba46140f1565b5b614baf60a0614167565b9050600082013567ffffffffffffffff811115614bcf57614bce614182565b5b614bdb84828501614213565b600083015250602082013567ffffffffffffffff811115614bff57614bfe614182565b5b614c0b84828501614213565b602083015250604082013567ffffffffffffffff811115614c2f57614c2e614182565b5b614c3b84828501614213565b604083015250606082013567ffffffffffffffff811115614c5f57614c5e614182565b5b614c6b84828501614213565b606083015250608082013567ffffffffffffffff811115614c8f57614c8e614182565b5b614c9b84828501614213565b60808301525092915050565b600060408284031215614cbd57614cbc6140f1565b5b614cc76040614167565b9050600082013567ffffffffffffffff811115614ce757614ce6614182565b5b614cf384828501614b61565b600083015250602082013567ffffffffffffffff811115614d1757614d16614182565b5b614d2384828501614b8f565b60208301525092915050565b600060208284031215614d4557614d446140e7565b5b600082013567ffffffffffffffff811115614d6357614d626140ec565b5b614d6f84828501614ca7565b91505092915050565b600060208284031215614d8e57614d8d6140e7565b5b600082013567ffffffffffffffff811115614dac57614dab6140ec565b5b614db884828501614213565b91505092915050565b614dca816142fa565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152614e198282614909565b91505060208301518482036020860152614e3382826149d3565b9150508091505092915050565b6000614e4c8383614dfc565b905092915050565b6000602082019050919050565b6000614e6c82614dd0565b614e768185614ddb565b935083602082028501614e8885614dec565b8060005b85811015614ec45784840389528151614ea58582614e40565b9450614eb083614e54565b925060208a01995050600181019050614e8c565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614f3a8383614909565b905092915050565b6000602082019050919050565b6000614f5a82614f02565b614f648185614f0d565b935083602082028501614f7685614f1e565b8060005b85811015614fb25784840389528151614f938582614f2e565b9450614f9e83614f42565b925060208a01995050600181019050614f7a565b50829750879550505050505092915050565b600060a0830160008301518482036000860152614fe18282614909565b91505060208301518482036020860152614ffb8282614909565b915050604083015184820360408601526150158282614909565b9150506060830151848203606086015261502f8282614909565b915050608083015184820360808601526150498282614909565b9150508091505092915050565b600060408301600083015184820360008601526150738282614f4f565b9150506020830151848203602086015261508d8282614fc4565b9150508091505092915050565b60006150a68383615056565b905092915050565b6000602082019050919050565b60006150c682614ed6565b6150d08185614ee1565b9350836020820285016150e285614ef2565b8060005b8581101561511e57848403895281516150ff858261509a565b945061510a836150ae565b925060208a019950506001810190506150e6565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000604083016000830151848203600086015261517982826149d3565b915050602083015184820360208601526151938282614fc4565b9150508091505092915050565b60006151ac838361515c565b905092915050565b6000602082019050919050565b60006151cc82615130565b6151d6818561513b565b9350836020820285016151e88561514c565b8060005b85811015615224578484038952815161520585826151a0565b9450615210836151b4565b925060208a019950506001810190506151ec565b50829750879550505050505092915050565b600060c08301600083015184820360008601526152538282614909565b91505060208301516152686020860182614dc1565b506040830151848203604086015261528082826149d3565b9150506060830151848203606086015261529a8282614e61565b915050608083015184820360808601526152b482826150bb565b91505060a083015184820360a08601526152ce82826151c1565b9150508091505092915050565b600060208201905081810360008301526152f58184615236565b905092915050565b60008060408385031215615314576153136140e7565b5b600083013567ffffffffffffffff811115615332576153316140ec565b5b61533e85828601614213565b925050602061534f8582860161431b565b9150509250929050565b60006040828403121561536f5761536e6140f1565b5b6153796040614167565b9050600082013567ffffffffffffffff81111561539957615398614182565b5b6153a584828501614530565b600083015250602082013567ffffffffffffffff8111156153c9576153c8614182565b5b6153d584828501614b8f565b60208301525092915050565b600080604083850312156153f8576153f76140e7565b5b600083013567ffffffffffffffff811115615416576154156140ec565b5b61542285828601614213565b925050602083013567ffffffffffffffff811115615443576154426140ec565b5b61544f85828601615359565b9150509250929050565b6000819050919050565b61546c81615459565b82525050565b60006020820190506154876000830184615463565b92915050565b600060408301600083015184820360008601526154aa82826149d3565b915050602083015184820360208601526154c48282614fc4565b9150508091505092915050565b600060208201905081810360008301526154eb818461548d565b905092915050565b6000806040838503121561550a576155096140e7565b5b600083013567ffffffffffffffff811115615528576155276140ec565b5b61553485828601614213565b925050602083013567ffffffffffffffff811115615555576155546140ec565b5b61556185828601614530565b9150509250929050565b600082825260208201905092915050565b600061558782614942565b615591818561556b565b9350836020820285016155a38561495e565b8060005b858110156155df57848403895281516155c085826149b2565b94506155cb836149c6565b925060208a019950506001810190506155a7565b50829750879550505050505092915050565b6000602082019050818103600083015261560b818461557c565b905092915050565b600081905092915050565b6000615629826148ba565b6156338185615613565b93506156438185602086016148d6565b80840191505092915050565b600061565b828461561e565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806156ad57607f821691505b6020821081036156c0576156bf615666565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026157287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826156eb565b61573286836156eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600061576f61576a615765846147b0565b61574a565b6147b0565b9050919050565b6000819050919050565b61578983615754565b61579d61579582615776565b8484546156f8565b825550505050565b600090565b6157b26157a5565b6157bd818484615780565b505050565b5b818110156157e1576157d66000826157aa565b6001810190506157c3565b5050565b601f821115615826576157f7816156c6565b615800846156db565b8101602085101561580f578190505b61582361581b856156db565b8301826157c2565b50505b505050565b600082821c905092915050565b60006158496000198460080261582b565b1980831691505092915050565b60006158628383615838565b9150826002028217905092915050565b61587b826148ba565b67ffffffffffffffff81111561589457615893614107565b5b61589e8254615695565b6158a98282856157e5565b600060209050601f8311600181146158dc57600084156158ca578287015190505b6158d48582615856565b86555061593c565b601f1984166158ea866156c6565b60005b82811015615912578489015182556001820191506020850194506020810190506158ed565b8683101561592f578489015161592b601f891682615838565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006159ad826147b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036159df576159de615973565b5b600182019050919050565b60006159f5826142fa565b9150615a00836142fa565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615615a3b57615a3a615973565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615615a7357615a72615973565b5b82820190509291505056fea2646970667358221220034e79a90d13f09c467eb13965b7128cdd567d566c7595808068d506c197754864736f6c634300080f0033";
        public UserDataContractDeploymentBase() : base(BYTECODE) { }
        public UserDataContractDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class ApproveTransactionStageAFunction : ApproveTransactionStageAFunctionBase { }

    [Function("approveTransactionStageA")]
    public class ApproveTransactionStageAFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageBFunction : ApproveTransactionStageBFunctionBase { }

    [Function("approveTransactionStageB", typeof(ApproveTransactionStageBOutputDTO))]
    public class ApproveTransactionStageBFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class ApproveTransactionStageCFunction : ApproveTransactionStageCFunctionBase { }

    [Function("approveTransactionStageC")]
    public class ApproveTransactionStageCFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple", "transaction", 2)]
        public virtual TransactionResponse Transaction { get; set; }
    }

    public partial class CreateUserFunction : CreateUserFunctionBase { }

    [Function("createUser")]
    public class CreateUserFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class DeclineTransactionFunction : DeclineTransactionFunctionBase { }

    [Function("declineTransaction")]
    public class DeclineTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("uint256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetAttributesTransactionFunction : GetAttributesTransactionFunctionBase { }

    [Function("getAttributesTransaction", typeof(GetAttributesTransactionOutputDTO))]
    public class GetAttributesTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class GetCredentialFunction : GetCredentialFunctionBase { }

    [Function("getCredential", typeof(GetCredentialOutputDTO))]
    public class GetCredentialFunctionBase : FunctionMessage
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetCredentialTransactionFunction : GetCredentialTransactionFunctionBase { }

    [Function("getCredentialTransaction", typeof(GetCredentialTransactionOutputDTO))]
    public class GetCredentialTransactionFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("string", "organization", 2)]
        public virtual string Organization { get; set; }
    }

    public partial class GetUserDataFunction : GetUserDataFunctionBase { }

    [Function("getUserData", typeof(GetUserDataOutputDTO))]
    public class GetUserDataFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
    }

    public partial class NewTransactionRequestFunction : NewTransactionRequestFunctionBase { }

    [Function("newTransactionRequest")]
    public class NewTransactionRequestFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "request", 1)]
        public virtual TransactionRequest Request { get; set; }
    }

    public partial class StringToBytes32Function : StringToBytes32FunctionBase { }

    [Function("stringToBytes32", "bytes32")]
    public class StringToBytes32FunctionBase : FunctionMessage
    {
        [Parameter("string", "source", 1)]
        public virtual string Source { get; set; }
    }

    public partial class UpdateBalanceFunction : UpdateBalanceFunctionBase { }

    [Function("updateBalance")]
    public class UpdateBalanceFunctionBase : FunctionMessage
    {
        [Parameter("string", "_id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "amount", 2)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class UpdateUserFunction : UpdateUserFunctionBase { }

    [Function("updateUser")]
    public class UpdateUserFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "update", 1)]
        public virtual Update Update { get; set; }
    }



    public partial class ApproveTransactionStageBOutputDTO : ApproveTransactionStageBOutputDTOBase { }

    [FunctionOutput]
    public class ApproveTransactionStageBOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual TransactionResponse ReturnValue1 { get; set; }
    }







    public partial class GetAttributesTransactionOutputDTO : GetAttributesTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetAttributesTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<Attribute> ReturnValue1 { get; set; }
    }

    public partial class GetCredentialOutputDTO : GetCredentialOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetCredentialTransactionOutputDTO : GetCredentialTransactionOutputDTOBase { }

    [FunctionOutput]
    public class GetCredentialTransactionOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual CredentialResponse ReturnValue1 { get; set; }
    }

    public partial class GetUserDataOutputDTO : GetUserDataOutputDTOBase { }

    [FunctionOutput]
    public class GetUserDataOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual UserDataResponse ReturnValue1 { get; set; }
    }



    public partial class StringToBytes32OutputDTO : StringToBytes32OutputDTOBase { }

    [FunctionOutput]
    public class StringToBytes32OutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bytes32", "result", 1)]
        public virtual byte[] Result { get; set; }
    }





    public partial class Attribute : AttributeBase { }

    public class AttributeBase
    {
        [Parameter("string", "name", 1)]
        public virtual string Name { get; set; }
        [Parameter("string", "value", 2)]
        public virtual string Value { get; set; }
    }

    public partial class TransactionStamp : TransactionStampBase { }

    public class TransactionStampBase
    {
        [Parameter("string", "fromID", 1)]
        public virtual string FromID { get; set; }
        [Parameter("string", "toID", 2)]
        public virtual string ToID { get; set; }
        [Parameter("string", "date", 3)]
        public virtual string Date { get; set; }
        [Parameter("string", "message", 4)]
        public virtual string Message { get; set; }
        [Parameter("string", "status", 5)]
        public virtual string Status { get; set; }
    }

    public partial class TransactionResponse : TransactionResponseBase { }

    public class TransactionResponseBase
    {
        [Parameter("tuple[]", "attributes", 1)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class CredentialResponse : CredentialResponseBase { }

    public class CredentialResponseBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class TransactionRequest : TransactionRequestBase { }

    public class TransactionRequestBase
    {
        [Parameter("string[]", "attributes", 1)]
        public virtual List<string> Attributes { get; set; }
        [Parameter("tuple", "stamp", 2)]
        public virtual TransactionStamp Stamp { get; set; }
    }

    public partial class UserDataResponse : UserDataResponseBase { }

    public class UserDataResponseBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("int256", "balance", 2)]
        public virtual BigInteger Balance { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 4)]
        public virtual List<CredentialResponse> Credentials { get; set; }
        [Parameter("tuple[]", "transactionRequests", 5)]
        public virtual List<TransactionRequest> TransactionRequests { get; set; }
        [Parameter("tuple[]", "approvedTransactions", 6)]
        public virtual List<TransactionResponse> ApprovedTransactions { get; set; }
    }

    public partial class AttributeUpdate : AttributeUpdateBase { }

    public class AttributeUpdateBase
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class CredentialUpdate : CredentialUpdateBase { }

    public class CredentialUpdateBase
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual BigInteger Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }

    public partial class Update : UpdateBase { }

    public class UpdateBase
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdate> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdate> Credentials { get; set; }
    }


    public partial class AttributeUpdateGen2 : AttributeUpdateBaseGen2 { }

    public class AttributeUpdateBaseGen2
    {
        [Parameter("tuple", "attribute", 1)]
        public virtual Attribute Attribute { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
    }



    public partial class CredentialUpdateGen2 : CredentialUpdateBaseGen2 { }

    public class CredentialUpdateBaseGen2
    {
        [Parameter("string", "organization", 1)]
        public virtual string Organization { get; set; }
        [Parameter("int256", "index", 2)]
        public virtual int Index { get; set; }
        [Parameter("tuple[]", "attributes", 3)]
        public virtual List<Attribute> Attributes { get; set; }
    }



    public partial class UpdateGen2 : UpdateBaseGen2 { }

    public class UpdateBaseGen2
    {
        [Parameter("string", "id", 1)]
        public virtual string Id { get; set; }
        [Parameter("tuple[]", "attributes", 2)]
        public virtual List<AttributeUpdateGen2> Attributes { get; set; }
        [Parameter("tuple[]", "credentials", 3)]
        public virtual List<CredentialUpdateGen2> Credentials { get; set; }
    }



}
